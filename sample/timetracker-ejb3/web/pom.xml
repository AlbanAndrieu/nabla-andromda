<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.andromda.timetracker.ejb3</groupId>
        <artifactId>timetracker-ejb3</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>web</artifactId>
    <packaging>war</packaging>
    <name>[${project.parent.artifactId} :: EJB3 Web] - ${project.artifactId} : ${project.version}</name>
    
    <dependencyManagement>
        <dependencies>
				<dependency>
					<groupId>org.jboss.seam</groupId>
					<artifactId>seam-bom</artifactId>
					<version>${seam.bom.version}</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
				 <!-- Override dependency resolver with latest version.
				 This must go *BEFORE* the Arquillian BOM. -->
				<dependency>
				    <groupId>org.jboss.shrinkwrap.resolver</groupId>
				    <artifactId>shrinkwrap-resolver-bom</artifactId>
				    <version>${org.jboss.shrinkwrap.bom.version}</version>
				    <type>pom</type>
				    <scope>import</scope>
				</dependency>					
				<dependency>
				    <groupId>org.jboss.arquillian</groupId>
				    <artifactId>arquillian-bom</artifactId>
				    <version>${org.jboss.arquillian.bom.version}</version>
				    <type>pom</type>
				    <scope>import</scope>
				</dependency>	        
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                of artifacts. We use this here so that we always get the correct versions
                of artifacts. Here we use the jboss-javaee-6.0-with tools stack (you can read this as
                the JBoss stack of the Java EE 6 APIs, with some extras tools for your project, such
                as Arquillian for testing) -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${org.jboss.bom.jboss.javaee6.with.tools.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Similarly to the JBoss Java EE 6 BOM above, the RichFaces BOM specifies the
                versions of artifacts required for using RichFaces in your project. -->
            <dependency>
                <groupId>org.richfaces</groupId>
                <artifactId>richfaces-bom</artifactId>
                <version>${org.richfaces.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
        
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <scope>${scope.type}</scope>
            <type>ejb</type>
        </dependency>
        <!--
       <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>war-base</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <scope>${scope.type}</scope>
        </dependency>

        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss AS 7 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
 
        <!-- GWT validation uses Hibernate Validator, and requires the sources
          at compile time. -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
          <scope>${scope.type}</scope>
          <classifier>sources</classifier>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <!--
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-infinispan</artifactId>
                <scope>${scope.type}</scope>
            </dependency>
        -->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<scope>${scope.type}</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<scope>${scope.type}</scope>
		</dependency>

        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
        </dependency>

        <!-- Import the Bean Validation API, which is used both on the server
        and the client. -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <!-- GWT validation also requires the validation API sources at compile
          time -->
        <dependency>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
          <classifier>sources</classifier>
        </dependency>

        <!--
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-jsf-cartridge-components</artifactId>
            -->
            <!-- 'unknown' because the version doesn't matter for system dependencies>
            <version>${andromda.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/andromda-jsf-cartridge-components.jar</systemPath -->
            <!--
        </dependency>
        -->

        <dependency>
            <groupId>com.sun.facelets</groupId>
            <artifactId>jsf-facelets</artifactId>
        </dependency>

        <!-- icefaces
        <dependency>
            <groupId>org.icefaces</groupId>
            <artifactId>icefaces</artifactId>
        </dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-comps</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-facelets</artifactId>
	</dependency>
	-->

    	<!-- richfaces -->
    	<!--
        <dependency>
          <groupId>org.richfaces.framework</groupId>
          <artifactId>richfaces-api</artifactId>
          <scope>${scope.type}</scope>
        </dependency>

    	<dependency>
    	  <groupId>org.richfaces.framework</groupId>
    	  <artifactId>richfaces-impl</artifactId>
    	</dependency>

    	<dependency>
    	  <groupId>org.richfaces.ui</groupId>
    	  <artifactId>richfaces-ui</artifactId>
    	</dependency>

    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>glassX</artifactId>
    	</dependency>

    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>darkX</artifactId>
    	</dependency>
    	-->

        <!-- myfaces -->
        <!--
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
        </dependency>
        -->

        <!--

        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.myfaces.tomahawk</groupId>
            <artifactId>tomahawk12</artifactId>
        </dependency>
        -->

        <!-- do not activate validator
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator</groupId>
            <artifactId>myfaces-extval-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-property-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-bean-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
            <artifactId>myfaces-extval-generic-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
            <artifactId>myfaces-extval-trinidad-support</artifactId>
        </dependency>
        -->
        <!-- JBoss7 requires overriding default classloader to support JSF 1.2 -->
        <!-- For MyFaces removed the Sun Jars (jsf-impl and jsf-api) from the war. it will use the MyFaces jars bundled with JBoss.  -->
        <!--
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            -->
            <!--<version>${jsf.api.version}</version>-->
            <!--
            <version>1.2_15</version>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>2.1.2</version>
            <scope>compile</scope>
        </dependency>
        -->

	<!-- for cannot access javax.faces.application.FacesMessage -->
	<!-- see in core project it is provided (needed for jboss 7) -->
	<dependency>
		<groupId>javax.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<!--<scope>${scope.type}</scope>-->
		<scope>${scope.tomcat.never.type}</scope>
		<!-- <scope>compile</scope> compile needed for jetty -->
	</dependency>

	<!-- http://download.java.net/maven/2 needed for tomcat only -->
	<!-- replaced by javax.faces for other except tomcat -->
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<scope>${scope.tomcat.only.type}</scope>
	</dependency>
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-impl</artifactId>
		<scope>${scope.tomcat.only.type}</scope>
	</dependency>	   
		
	<!--
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<scope>test</scope>
	</dependency>
	-->
						
        <!-- replace this by slf4j-api and slf4j-simple
        http://pwu-developer.blogspot.com/2010/08/caused-by-javalangerror-this-version-of.html
        <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <scope>test</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>${scope.type}</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>${scope.type}</scope>
        </dependency>

        <!--
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-utils</artifactId>
        </dependency>
        -->

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<scope>${scope.type}</scope>
		</dependency>

		<dependency>
			 <groupId>javax.ejb</groupId>
			 <artifactId>ejb-api</artifactId>
			 <scope>${scope.type}</scope>
			 <optional>true</optional>
		</dependency>

        <!-- *************** Seam Dependencies *************** -->

 	<!--
	<dependency>
	  <groupId>org.jboss.seam</groupId>
	  <artifactId>jboss-seam</artifactId>
	  <version>${seam.version}</version>
	  <scope>${scope.type}</scope>
	  <type>ejb</type>
	</dependency>
	-->

 			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<scope>compile</scope>
			</dependency>
			<!--
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-snowball</artifactId>
				<scope>compile</scope>
			</dependency>
			-->

        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ui</artifactId>
        </dependency>

        <!-- optional, but a reasonable requirement for a newly created project -->
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-debug</artifactId>
        </dependency>

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-remoting</artifactId>
			<scope>${scope.type}</scope>
			<exclusions>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

        <!-- add more Seam modules as needed
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ioc</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-mail</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-pdf</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-remoting</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-excel</artifactId>
        </dependency>
        -->

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<scope>${scope.type}</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId
			<scope>${scope.type}</scope>
		</dependency>
		-->

        <dependency>
        	<groupId>asm</groupId>
        	<artifactId>asm</artifactId>
        </dependency>
       <dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </dependency>

        <!--
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
        </dependency>
        -->

        <!--dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency-->

        <!--
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        -->

        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-j2ee</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3-client</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3x</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>hibernate-entitymanager</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>${scope.type}</scope>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>${scope.type}</scope>
            <!--<scope>provided</scope>-->
        </dependency>

		<!-- *************** Drools / jBPM Dependency *************** -->

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
			<scope>${scope.type}</scope>
		</dependency>
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<scope>${scope.type}</scope>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
			<scope>${scope.type}</scope>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-jpdl</artifactId>
			<scope>${scope.type}</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

        <!-- gwt-user is required at runtime because we use some of the client/server
        shared APIs such as RegExp, so scope is 'compile' rather than 'provided'. -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <!--<scope>compile</scope> error in deployment -->
            <scope>${scope.type}</scope> <!-- prevents from including this in war -->
        </dependency>
        <!--
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <scope>${scope.type}</scope> --><!-- prevents from including this in war --><!--
        </dependency>

        <dependency>
             <groupId>com.google.gwt</groupId>
             <artifactId>gwt-servlet</artifactId>
            <scope>compile</scope>
        </dependency>
        -->

	<dependency>
	    <groupId>com.gwtplatform</groupId>
	    <artifactId>gwtp-all</artifactId>
	    <scope>compile</scope>
	</dependency>

	<dependency>
		<groupId>xerces</groupId>
		<artifactId>xercesImpl</artifactId>
		<scope>${scope.type}</scope>
		<exclusions>
			<exclusion>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
			</exclusion>
		</exclusions>
	</dependency>

	<dependency>
		<groupId>org.jboss.el</groupId>
		<artifactId>jboss-el</artifactId>
		<scope>${scope.type}</scope>
	</dependency>

    <dependency>
		   <groupId>org.hibernate.javax.persistence</groupId>
		   <artifactId>hibernate-jpa-2.0-api</artifactId>
		   <scope>provided</scope>
    </dependency>

	<dependency>
		<groupId>nekohtml</groupId>
		<artifactId>nekohtml</artifactId>
		<scope>${scope.type}</scope>
	</dependency>

        <!-- For JSF2.0 -->
        <!--
        <dependency>
            <groupId>com.ocpsoft</groupId>
            <artifactId>ocpsoft-pretty-faces</artifactId>
            <version>2.0.2_GA</version>
        </dependency>
        -->

        <!--
        <dependency>
            <groupId>org.ajax4jsf</groupId>
            <artifactId>ajax4jsf</artifactId>
            <version>1.0.5</version>
        </dependency>
        -->

        <!--
	<dependency>
	    <groupId>javax.persistence</groupId>
	    <artifactId>persistence-api</artifactId>
	    <scope>${scope.type}</scope>
	    <optional>true</optional>
	</dependency>
	-->

	<!-- jboss dependencies -->
        <!-- Import the CDI API, we use provided scope as the API is included
            in JBoss AS 7 -->
        <!--
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss AS 7 -->
        <!--
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <!-- Import the JSF API, we use provided scope as the API is included
            in JBoss AS 7 -->
        <!--
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <!-- Import the EJB API, we use provided scope as the API is included in
              JBoss AS 7 -->
        <!--
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <!-- Define the version of JBoss' Java EE 6 APIs we want to import.
            Any dependencies from org.jboss.spec will have their version defined by this
            BOM -->
        <!-- JBoss distributes a complete set of Java EE 6 APIs including
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
            a collection) of artifacts. We use this here so that we always get the correct
            versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can read
            this as the JBoss stack of the Java EE 6 APIs). You can actually use this
            stack with any version of JBoss AS that implements Java EE 6, not just JBoss
            AS 7! -->
        <!-- put this in dependencyManagement
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.org.jboss.spec.jboss.javaee6}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        -->
    </dependencies>

    <properties>
    	<target.dir>target</target.dir>
    	<!--
    	<jboss.home>C:\jboss-5.1.0.GA</jboss.home>
        <server.version>5.1.0.GA</server.version>
        -->
    </properties>

    <build>
        <finalName>${project.parent.artifactId}</finalName>
        <!--<defaultGoal>hotdeploy:exploded</defaultGoal>-->
        <!-- comment resources for mvn eclipse:eclipse -->
            <!--
        <resources>
            <resource>
              <directory>src/main/java</directory>
              <includes>
                <include>**/client/**/*.java</include>
                <include>**/client/**/*.properties</include>
                <include>**/shared/**/*.java</include>
                <include>**/shared/**/*.properties</include>
                <include>**/*.gwt.xml</include>
              </includes>
            </resource>
            -->
            <!--
            <resource>
                <directory>src/hot/java</directory>
                <filtering>false</filtering>
            </resource>
            -->
            <!--
            <resource>
            	<directory>${maven.build.generated}/main/java</directory>
            	<filtering>true</filtering>
            </resource>
            -->
            <!--
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>true</filtering>
            </resource>
	    <resource>
                <directory>${maven.build.generated}/main/webapp</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>false</filtering>
            </resource>
        </resources>
                  -->
        <!--
	<filters>
		<filter>${home.dir}/build-tools/src/main/resources/project/${project.parent.artifactId}-development.properties</filter>
	</filters>
	-->
	<!--
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
            <includes>
              <include>**/client/**/*.java</include>
              <include>**/client/**/*.properties</include>
              <include>**/shared/**/*.java</include>
              <include>**/shared/**/*.properties</include>
              <include>**/*.gwt.xml</include>
            </includes>
          </testResource>
        </testResources>
        -->
        <plugins>
           <plugin>
           	<groupId>org.codehaus.mojo</groupId>
           	<artifactId>build-helper-maven-plugin</artifactId>
           	<executions>
           		<execution>
           			<id>add-source</id>
           			<phase>validate</phase>
           			<goals>
           				<goal>add-source</goal>
           			</goals>
           			<configuration>
           				<sources>
           					<source>${basedir}/src/hot/java</source>
           				</sources>
           			</configuration>
           		</execution>
           	</executions>
           </plugin>

           <!-- dirty hack for GWT issue #3439 - it is not really fixed -->
           <!--
           <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>remove-javax</id>
                  <phase>compile</phase>
                  <configuration>
                    <tasks>
                      <delete dir="${project.build.directory}/classes/javax" />
                    </tasks>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            -->
            <!-- GWT plugin to compile client-side java code to javascript and
            to run GWT development mode -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>gwt-maven-plugin</artifactId>
              <version>${maven.gwt.plugin.version}</version>
              <configuration>
                <inplace>true</inplace>
                <logLevel>INFO</logLevel>
                <extraJvmArgs>-Xmx512m</extraJvmArgs>
                <!-- below fix drools issue : java.lang.NoSuchFieldError: warningThreshold -->
                <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath><!-- The GWT compiler must the correct JDT version -->
                <!-- Configure GWT's development mode (formerly known as hosted
                  mode) to not start the default server (embedded jetty), but to download the
                  HTML host page from the configured runTarget. -->
                <noServer>true</noServer>
                <runTarget>http://localhost:${server.port}/timetracker-ejb3/HelloWorldGWT.html</runTarget>
              </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>resources</goal>
                    <goal>compile</goal>
                    <!--<goal>generateAsync</goal>-->
                  </goals>
                </execution>
                <execution>
                  <id>gwt-clean</id>
                  <phase>clean</phase>
                  <goals>
                    <goal>clean</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <!--
			<plugin>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>jacoco-gwt-maven-plugin</artifactId>
			  <version>${maven.jacoco.gwt.plugin.version}</version>
			  <executions>
				<execution>
				  <id>jacoco-initialize</id>
				  <phase>initialize</phase>
				  <goals>
					<goal>prepare-agent</goal>
				  </goals>
				  <configuration>
					<propertyName>jacoco.agent.ut.arg</propertyName>
				  </configuration>
				</execution>
				<execution>
				  <id>jacoco-site</id>
				  <phase>site</phase>
				  <goals>
					<goal>report</goal>
				  </goals>
				</execution>
			  </executions>
			</plugin>            
			-->
<!--
	    <plugin>
	    	<groupId>com.ctp.seam.maven</groupId>
	    	<artifactId>maven-hotdeploy-plugin</artifactId>
	    	<extensions>true</extensions>
	    	<configuration>
	    		<source>${jdkLevel}</source>
	    		<target>${jdkLevel}</target>
	    		<sourceDirectory>${basedir}/src/main/hot</sourceDirectory>
	    		<deployDirectory>${jboss.deploy.directory}/${build.finalName}.war</deployDirectory>
	    	</configuration>
	    </plugin>
	    -->
	    <!-- run with 'mvn cli:execute-phase' and use 'hot' -->
	    <plugin>
	    	<groupId>org.twdata.maven</groupId>
	    	<artifactId>maven-cli-plugin</artifactId>
	    	<configuration>
	    		<userAliases>
	    			<hot>hotdeploy:exploded -o</hot>
	    			<cln>clean -o -Pclean</cln>
	    		</userAliases>
	    	</configuration>
	    </plugin>
	    <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <warName>${application.name}</warName>
                    <!-- the default value is the filter list under build -->
          	    <!-- specifying a filter will override the filter list under build -->
          	    <!--
          	    <filters>
          	    	<filter>${home.dir}/build-tools/src/main/resources/project/${project.parent.artifactId}-development.properties</filter>
          	    </filters>
          	    -->
          	    <webResources>
          	      <webResource>
          	        <directory>${basedir}/src/main/webapp/WEB-INF</directory>
          	        <targetPath>WEB-INF</targetPath>
          	        <filtering>true</filtering>
          	      </webResource>
          	    </webResources>
                    <!--<warSourceDirectory>${target.dir}/src/main/webapp</warSourceDirectory>-->
                    <!-- Needed for mvn 2.1 with war-plugin 2.1. See http://jira.codehaus.org/browse/MWAR-187 -->
                    <!--
                    <useCache>false</useCache>
                    <excludes>**/*.java</excludes>
                    -->
                    <!--packagingExcludes>**/aopa*.jar,**/cglib-*.jar,**/commons-codec*.jar,**/commons-fileu*.jar,**/commons-logging*.jar,**/hibernate-validator*.jar,**/spring-a*.jar,**/spring-bean*.jar,**/spring-co*.jar,**/spring-expr*.jar,**/spring-tx*.jar,**/spring-web*.jar</packagingExcludes-->
                    <!-- We must exclude GWT client local classes from the deployment,
                      or classpath scanners such as Hibernate and Weld get confused when the webapp
                      is bootstrapping. -->
                    <!-- workaround for openejb exluded ejb-jar.xml and components.xml from **/WEB-INF/classes/META-INF/ -->
                    <!--<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class,**/WEB-INF/classes/META-INF/*.xml</packagingExcludes>-->
                    <packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>
                    <!--<webappDirectory>${jboss.deploy.directory}/${project.parent.artifactId}</webappDirectory>-->
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <!--
                    <overlays>
                      <overlay>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>war-base</artifactId>
                        -->
                        <!--
                        <filtered>true</filtered>
                        <includes>
                          <include>WEB-INF/web.xml</include>
                        </includes>
                        -->
                        <!--
                      </overlay>
                    </overlays>
                    -->
                    <archive>
                      <manifest>
                        <addClasspath>true</addClasspath>
                      </manifest>
                      <manifestEntries>
                        <Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies>
                      </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
            <!-- To use, run: mvn package jboss-as:deploy -->
            <plugin>
              <groupId>org.jboss.as.plugins</groupId>
              <artifactId>jboss-as-maven-plugin</artifactId>
              <version>${maven.jboss.as.plugin.version}</version>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-clean-plugin</artifactId>
              <version>${maven.clean.plugin.version}</version>
              <configuration>
                <filesets>
                  <fileset>
                    <directory>.errai</directory>
                  </fileset>
                  <fileset>
                    <directory>.gwt</directory>
                  </fileset>
                  <fileset>
                    <directory>src/main/gwt-unitCache</directory>
                  </fileset>
                  <fileset>
                    <directory>src/main/webapp/helloworldgwt</directory>
                  </fileset>
                </filesets>
              </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
            </plugin>
            <plugin>
            	<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.eclipse.plugin.version}</version>

	    <!--
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${maven.jetty.mortbay.plugin.version}</version>
                <configuration>
			<scanIntervalSeconds>10</scanIntervalSeconds>
          		<connectors>
          		  <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
          		    <port>8050</port>
          		    <maxIdleTime>60000</maxIdleTime>
          		  </connector>
          		</connectors>
          		-->
          		<!--
                    <webAppSourceDirectory>${project.basedir}/${target.dir}/src/main/java</webAppSourceDirectory>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <baseResource implementation="org.mortbay.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp, ${project.basedir}/${target.dir}/src/main/webapp</resourcesAsCSV>
                        </baseResource>
                        <contextPath>/${application.id}-${project.version}</contextPath>
                    </webAppConfig>
                    -->
                <!--</configuration>-->
                <!-- jsp 2
		<dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.0</artifactId>
                        <version>6.1.14</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler-jdt</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-runtime</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                        <version>6.1.14</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jsp-api-2.1</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>start</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jetty-annotations</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
		</dependencies>
		-->
            </plugin>
			<plugin>
			  <groupId>org.jboss.tattletale</groupId>
			  <artifactId>tattletale-maven</artifactId>
			  <version>${maven.tattletale.plugin.version}</version>
			  <executions>
				<execution>
				  <phase>verify</phase> <!-- needs to run after WAR package has been built -->
				  <goals>
					<goal>report</goal>
				  </goals>
				</execution>
			  </executions>
			  <configuration>
				<source>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</source>
				<destination>${project.reporting.outputDirectory}/tattletale</destination>
				<reports>
				  <report>jar</report>
				  <!--<report>multiplejars</report>-->
				</reports>
				<profiles>
				  <profile>java6</profile>
				</profiles>
				<failOnWarn>true</failOnWarn>
				<!-- excluding some jars, if jar name contains any of these strings it won't be analyzed -->
				<excludes>
				  <exclude>persistence-api-</exclude>
				  <exclude>xmldsig-</exclude>
				</excludes>
			  </configuration>
			</plugin>              
            <!--
	    <plugin>
	    	<groupId>com.atlassian.maven.plugins</groupId>
	    	<artifactId>maven-clover2-plugin</artifactId>
	    	<configuration>
	    		<skip>true</skip>
	    	</configuration>
	    </plugin>    
	    -->                 
        </plugins>       
    </build>

    <profiles>
                <profile>
					    <!-- this profile must be activated with arq-jbossas-managed -->
                        <id>arquillian</id>
                        <activation>
                                <property>
                                        <name>!profile.activation</name>
                                </property>
                        </activation>
                        <dependencies>
								<!-- already inside microcontainer-openejb
                                <dependency>
                                  <groupId>no.knowit.seam</groupId>
                                  <artifactId>seam-utils-ejb</artifactId>
                                  <type>ejb</type>
                                  <scope>test</scope>
                                </dependency>

                                <dependency>
                                  <groupId>no.knowit.seam</groupId>
                                  <artifactId>seam-utils-openejb</artifactId>
                                  <type>ejb</type>
                                  <scope>test</scope>
                                </dependency>

                                <dependency>
                                 <groupId>dom4j</groupId>
                                 <artifactId>dom4j</artifactId>
                                 <scope>test</scope>
                                </dependency>

                                <dependency>
                                    <groupId>org.apache.openejb</groupId>
                                    <artifactId>openejb-core</artifactId>
                                    <scope>test</scope>
                                </dependency>
                                -->
                                
                                <!--
                                <dependency>
                                        <groupId>junit</groupId>
                                        <artifactId>junit</artifactId>
                                        <type>jar</type>
                                        <scope>test</scope>
                                </dependency>         
                                -->                       
                                <!-- comment <provider>org.hibernate.ejb.HibernatePersistence</provider> in persistence.xml to enable openjpa -->
                                <!--
                                <dependency>
                                    <groupId>org.apache.openjpa</groupId>
                                    <artifactId>openjpa</artifactId>
                                    <version>${openjpa.version}</version>
                                </dependency>
                                -->
                                <!--
                                <dependency>
                                  <groupId>org.jboss.arquillian.extension</groupId>
                                  <artifactId>arquillian-seam2</artifactId>
                                  <version>${org.jboss.arquillian.seam2.version}</version>
                                  <scope>test</scope>
                                </dependency>
                                -->
                                
								<dependency>
									<groupId>org.jboss.arquillian.junit</groupId>
									<artifactId>arquillian-junit-container</artifactId>
									<scope>test</scope>
								</dependency>                                
                                <!-- not recommended for Seam 2.3 http://docs.jboss.org/seam/2.3.0.Final/reference/en-US/html/testing.html
								<dependency>
									<groupId>org.jboss.arquillian.testng</groupId>
									<artifactId>arquillian-testng-container</artifactId>
									<scope>test</scope>
								</dependency>	                  
								-->              
								<dependency>
									<groupId>org.jboss.as</groupId>
									<artifactId>jboss-as-arquillian-container-managed</artifactId>
									<scope>test</scope>
								</dependency>				

								<!--
								<dependency>
								  <groupId>org.jboss.shrinkwrap.resolver</groupId>
								  <artifactId>shrinkwrap-resolver-depchain</artifactId>
								  <version>${org.jboss.shrinkwrap.resolver.version}</version>
								  <type>pom</type>
								  <scope>test</scope>
								</dependency>
								-->
								
								<dependency>
									<groupId>org.jboss.shrinkwrap.resolver</groupId>
									<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
									<version>${org.jboss.shrinkwrap.resolver.version}</version>
									<scope>test</scope>  
								</dependency>

								<!--
								<dependency>
										  <groupId>org.jboss.arquillian.protocol</groupId>
										  <artifactId>arquillian-protocol-servlet</artifactId>
										  <scope>test</scope>
								</dependency>		
								-->								
                        </dependencies>
                        <build>
                                <plugins>
                                        <plugin>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>build-helper-maven-plugin</artifactId>
                                                <executions>
                                                        <execution>
                                                                <id>add-test-source</id>
                                                                <phase>generate-test-sources</phase>
                                                                <goals>
                                                                        <goal>add-test-source</goal>
                                                                </goals>
                                                                <configuration>
                                                                        <sources>
                                                                                <source>${basedir}/src/test/bootstrap-arquillian/java</source>
                                                                        </sources>
                                                                </configuration>
                                                        </execution>
                                                </executions>
                                        </plugin>
                                        <!--
                                        <plugin>
                                            <groupId>org.apache.maven.plugins</groupId>
                                            <artifactId>maven-surefire-plugin</artifactId>
                                            <version>${maven.surefire.plugin.version}</version>
                                            <configuration>
                                                    <suiteXmlFiles>
                                                            <suiteXmlFile>src/test/bootstrap-arquillian/testng-all.xml</suiteXmlFile>
                                                    </suiteXmlFiles>
                                            </configuration>
                                        </plugin>
                                        -->
                                        <plugin>
                                            <groupId>org.apache.maven.plugins</groupId>
                                            <artifactId>maven-surefire-plugin</artifactId>
                                            <version>${maven.surefire.plugin.version}</version>
                                            <inherited>true</inherited>
                                            <configuration>
                                                <skip>${maven.test.skip}</skip>
                                                <trimStackTrace>false</trimStackTrace>   
                                                <testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
                                                <environmentVariables>
                                                    <JBOSS_HOME>${jboss.home}</JBOSS_HOME>
                                                </environmentVariables>
                                                <systemProperties>
                                                    <jboss.version>${server.version}</jboss.version>
                                                </systemProperties>
                                            </configuration>
                                        </plugin>
                                </plugins>
                                <resources>
                                        <resource>
                                                <directory>${maven.build.generated}/main/resources</directory>
                                                <filtering>true</filtering>
                                        </resource>
                                        <resource>
                                                <directory>${basedir}/src/main/resources</directory>
                                                <filtering>true</filtering>
                                        </resource>
                                </resources>

                                <testResources>
                                        <testResource>
                                                <directory>${basedir}/src/test/resources</directory>
                                                <filtering>true</filtering> 
                                        </testResource>
                                        <testResource>
                                                <directory>${basedir}/src/test/bootstrap-arquillian/resources</directory>
                                                <filtering>true</filtering>
                                        </testResource>
                                </testResources>
                        </build>
                </profile>    
	<profile>
			<id>arq-jbossas-managed-nok</id>
			<activation>
				<property>
					<name>profile.activation</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
				  <groupId>org.jboss.arquillian</groupId>
				  <artifactId>arquillian-bom</artifactId>
				  <version>${org.jboss.arquillian.bom.version}</version>
				  <type>pom</type>
				  <!--<scope>import</scope>-->
				</dependency>

				<!-- Optional, but highly recommended -->
    			<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) JPA from JUnit/TestNG -->
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				 <!-- not recommended for Seam 2.3 http://docs.jboss.org/seam/2.3.0.Final/reference/en-US/html/testing.html
				<dependency>
					<groupId>org.jboss.arquillian.testng</groupId>
					<artifactId>arquillian-testng-container</artifactId>
					<scope>test</scope>
				</dependency>
				-->
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>

				<dependency>
				    <groupId>org.jboss.as</groupId>
				    <artifactId>jboss-as-arquillian-container-managed</artifactId>
				    <scope>test</scope>
				</dependency>

				<!--
     				<dependency>
        			    <groupId>org.jboss.spec</groupId>
        			    <artifactId>jboss-javaee-6.0</artifactId>
        			    <version>1.0.0.Final</version>
        			    <type>pom</type>
        			    <scope>provided</scope>
        			</dependency>
        			<dependency>
        			    <groupId>org.jboss.as</groupId>
        			    <artifactId>jboss-as-arquillian-container-remote</artifactId>
        			    <version>7.0.2.Final</version>
        			</dependency>
        			-->

				<!--
					<dependency>
						<groupId>org.jboss.arquillian.container</groupId>
						<artifactId>arquillian-jbossas-embedded-6</artifactId>
						<version>1.0.0.CR3</version>
						<scope>test</scope>
					</dependency>
    				<dependency>
						<groupId>org.jboss.jbossas</groupId>
						<artifactId>jboss-as-depchain</artifactId>
						<version>6.0.0.Final</version>
						<type>pom</type>
						<scope>test</scope>
          			    <exclusions>
          			      <exclusion>
          			        <groupId>org.apache.cxf</groupId>
          			        <artifactId>cxf-common-schemas</artifactId>
          			      </exclusion>
          			    </exclusions>
                	</dependency>
                		-->

					<dependency>
						<groupId>org.jboss.arquillian.container</groupId>
						<artifactId>arquillian-openejb-embedded-3.1</artifactId>
						<scope>test</scope>
					</dependency>
					<!--
					<dependency>
						<groupId>jboss</groupId>
						<artifactId>jnp-client</artifactId>
						<version>4.2.2.GA</version>
					</dependency>
					-->

					<!--
					<dependency>
						<groupId>org.jboss.seam.faces</groupId>
						<artifactId>seam-faces</artifactId>
						<version>3.0.0.Alpha3</version>
					</dependency>
					-->
						<!--
					<dependency>
					  <groupId>org.jboss.seam</groupId>
					  <artifactId>jboss-seam</artifactId>
					  <version>${seam.version}</version>
					  <scope>${scope.type}</scope>
					  <type>ejb</type>
					</dependency>
					-->
    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-ejb</artifactId>
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>

    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-openejb</artifactId>
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>

			       <dependency>
			         <groupId>dom4j</groupId>
			         <artifactId>dom4j</artifactId>
			         <scope>test</scope>
			       </dependency>

			       <!--Fix: java.lang.ClassNotFoundException: org.jboss.util.id.SerialVersion-->
			       <dependency>
					  <groupId>org.jboss</groupId>
					  <artifactId>jboss-common-core</artifactId>
					  <scope>test</scope>
				   </dependency>

			       <!--Caused by: java.lang.ClassNotFoundException: org.jboss.util.id.SerialVersion-->
			       <!--
				   <dependency>
						<groupId>org.apache.openejb</groupId>
						<artifactId>openejb-core</artifactId>
						<version>${openejb.core.version}</version>
						<scope>test</scope>
				   </dependency>
				   -->

					<!-- comment <provider>org.hibernate.ejb.HibernatePersistence</provider> in persistence.xml to enable openjpa -->
					<!--
					<dependency>
						<groupId>org.apache.openjpa</groupId>
						<artifactId>openjpa</artifactId>
						<version>${openjpa.version}</version>
					</dependency>
					-->
				<dependency>
				  <groupId>org.jboss.arquillian.extension</groupId>
				  <artifactId>arquillian-seam2</artifactId>
				  <scope>test</scope>
				</dependency>

				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<type>jar</type>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>add-test-source</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${basedir}/src/test/bootstrap-arquillian/java</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
            				<plugin>
            				    <groupId>org.apache.maven.plugins</groupId>
            				    <artifactId>maven-surefire-plugin</artifactId>
            				    <version>${maven.surefire.plugin.version}</version>
            				    <configuration>
            				            <suiteXmlFiles>
            				                    <suiteXmlFile>src/test/bootstrap-arquillian/testng-all.xml</suiteXmlFile>
            				            </suiteXmlFiles>
            				    </configuration>
            				</plugin>
            				-->
            		                <plugin>
            		                    <groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-surefire-plugin</artifactId>
										<version>${maven.surefire.plugin.version}</version>
										<inherited>true</inherited>
										<configuration>
											<skip>${maven.test.skip}</skip>
											<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
											<!--
											<childDelegation>true</childDelegation>
											<useSystemClassLoader>true</useSystemClassLoader>
											<argLine>-Dsun.lang.ClassLoader.allowArraySyntax=true</argLine>
											-->
											<!--
            		                        <environmentVariables>
            		                            <JBOSS_HOME>${project.build.directory}/jboss-as-${server.version}</JBOSS_HOME>
            		                        </environmentVariables>
            		                        -->
            		                        <environmentVariables>
            		                            <JBOSS_HOME>${jboss.home}</JBOSS_HOME>
            		                        </environmentVariables>
            		                        <systemProperties>
            		                            <jboss.version>${server.version}</jboss.version>
            		                        </systemProperties>
            		                        <!--
											<classpathDependencyExcludes>
														<classpathDependencyExcludes>org.jboss.spec.javax.annotation:jboss-annotations-api_1.1_spec</classpathDependencyExcludes>
														<classpathDependencyExcludes>org.jboss.spec.javax.ejb:jboss-ejb-api_3.1_spec</classpathDependencyExcludes>
														<classpathDependencyExcludes>javax.enterprise:cdi-api</classpathDependencyExcludes>
														<classpathDependencyExcludes>com.sun.faces:jsf-api</classpathDependencyExcludes>
														<classpathDependencyExcludes>javax.validation:validation-api</classpathDependencyExcludes>
														<classpathDependencyExcludes>org.hibernate.javax.persistence:hibernate-jpa-2.0-api</classpathDependencyExcludes>
														<classpathDependencyExclude>javax:javaee-api</classpathDependencyExclude>
												<classpathDependencyExclude>javax:javaee-web-api</classpathDependencyExclude>
													</classpathDependencyExcludes>
													-->
											<additionalClasspathElements>
											<!--<additionalClasspathElement>${env.JBOSS_HOME}/client/jbossws-native-client.jar</additionalClasspathElement>-->
											<!-- Because jbossweb.sar contains shared web.xml, which must be visible from same CL as TomcatDeployer.class.getClassLoader -->
											<!--<additionalClasspathElement>${env.JBOSS_HOME}/server/default/deploy/jbossweb.sar</additionalClasspathElement>-->
											</additionalClasspathElements>
											<redirectTestOutputToFile>true</redirectTestOutputToFile>
											<trimStackTrace>false</trimStackTrace>
											<printSummary>true</printSummary>
											<forkMode>once</forkMode>
											<!-- MaxPermSize Required to bump the space for relective data like classes, methods, etc. EMB-41. Endorsed required for things
												like WS support (EMB-61) -->
											<!--<argLine>-Xmx512m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Djava.endorsed.dirs=${env.JBOSS_HOME}/lib/endorsed -Djboss.home=${env.JBOSS_HOME} -Djboss.boot.server.log.dir=${env.JBOSS_HOME}</argLine>-->
            		                    </configuration>
            		                </plugin>
								
									<!-- start app using java -jar target/dependency/jetty-runner.jar target/*.war -port 9090 -->
									<plugin>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<executions>
											<execution>
												<phase>package</phase>
												<goals>
													<goal>copy</goal>
												</goals>
												<configuration>
													<artifactItems>
														<artifactItem>
															<groupId>org.mortbay.jetty</groupId>
															<artifactId>jetty-runner</artifactId>
															<version>${jetty.runner.version}</version>
															<destFileName>jetty-runner.jar</destFileName>
														</artifactItem>
													</artifactItems>
												</configuration>
											</execution>
										</executions>
									</plugin>	
				</plugins>
				<resources>
					<resource>
						<directory>${maven.build.generated}/main/resources</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>${basedir}/src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>

				<testResources>
					<testResource>
						<directory>${basedir}/src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
					<testResource>
						<directory>${basedir}/src/test/bootstrap-arquillian/resources</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
			</build>
		</profile>
                <!-- important in order to openejb to work components.xml and ejb-jar.xml (can be empty) must be in src\main\resources\META-INF if source are in src/main/java -->
                <!-- in order to seam to see the name add seam.properties to src\main\resources -->
		<profile>
			<id>microcontainer-openejb</id>
			<activation>
				<property>
					<name>profile.activation</name>
				</property>
			</activation>
			<dependencies>

    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-ejb</artifactId>
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>

    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-openejb</artifactId>
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>
                		<!--
        			<dependency>
				  <groupId>org.jboss</groupId>
				  <artifactId>jboss-common-core</artifactId>
				  <version>2.2.19.GA</version>
				  <scope>test</scope>
				</dependency>
				-->
			       <!--Fix: java.lang.ClassNotFoundException: org.jboss.util.id.SerialVersion-->
			       <dependency>
					  <groupId>org.jboss</groupId>
					  <artifactId>jboss-common-core</artifactId>
					  <scope>test</scope>
				   </dependency>
				   
				   <dependency>
			         <groupId>dom4j</groupId>
			         <artifactId>dom4j</artifactId>
			         <scope>test</scope>
			       </dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>add-test-source</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${basedir}/src/test/bootstrap-openejb</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<resources>
					<resource>
						<directory>${maven.build.generated}/main/resources</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>${basedir}/src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>

				<testResources>
					<testResource>
						<directory>${basedir}/src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
					<testResource>
						<directory>${basedir}/src/test/bootstrap-openejb</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				<!--
				<filters>
					<filter>${home.dir}/build-tools/src/main/resources/project/project-development.properties</filter>
				</filters>
				-->
			</build>
		</profile>
		<!--
		<profile>
			<id>clean</id>
			<build>
				<defaultGoal>clean</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven.clean.plugin.version}</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${jboss.deploy.directory}/${build.finalName}.war/</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>package-war</id>
			<build>
				<defaultGoal>clean</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.ctp.seam.maven</groupId>
						<artifactId>maven-hotdeploy-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<source>${jdkLevel}</source>
							<target>${jdkLevel}</target>
							<sourceDirectory>${basedir}/src/hot/java</sourceDirectory>
							<useWarPackaging>true</useWarPackaging>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		-->
	</profiles>
</project>
