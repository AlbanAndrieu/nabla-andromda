<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.andromda.timetracker.ejb3</groupId>
        <artifactId>timetracker-ejb3</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    
    <modelVersion>4.0.0</modelVersion>
    <artifactId>app</artifactId>
    <packaging>ear</packaging>
    <name>[${project.parent.artifactId} :: EJB3 Application] - ${project.artifactId} : ${project.version}</name>
    
    <!-- TODO jboss tomcat https://repository.jboss.org/nexus/content/groups/public/org/jboss/seam/examples/hibernate-web/2.3.0-SNAPSHOT/hibernate-web-2.3.0-20120313.055246-7.pom -->
    <!-- TODO for hibernate https://repository.jboss.org/nexus/content/groups/public/org/jboss/seam/examples/2.3.0-SNAPSHOT/examples-2.3.0-20120313.054422-7.pom -->
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>mda</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.andromda.profiles.uml14</groupId>
                    <artifactId>andromda-profile</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
            <exclusions>
            	<!--
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache</artifactId>
                </exclusion>
                -->
                <exclusion>
                    <groupId>jboss.jboss-embeddable-ejb3</groupId>
                    <artifactId>hibernate-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jboss.jboss-embeddable-ejb3</groupId>
                    <artifactId>jboss-ejb3-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jboss.jboss-embeddable-ejb3</groupId>
                    <artifactId>thirdparty-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>${scope.type}</scope>
        </dependency>

        <!-- commons -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils-core</artifactId>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <type>jar</type>
        </dependency>

        <!--
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        -->

        <!-- Jboss Seam -->
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam</artifactId>
          <type>ejb</type>
        </dependency>

		<dependency>
		  <groupId>org.jboss.seam</groupId>
		  <artifactId>jboss-seam-remoting</artifactId>
		</dependency>

        <!--
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ui</artifactId>
          <scope>provided</scope>
        </dependency>
        -->
        <dependency>
          <groupId>org.jboss.el</groupId>
          <artifactId>jboss-el</artifactId>
          <type>jar</type>
        </dependency>

        <!-- richfaces -->
        <!--
        <dependency>
          <groupId>org.richfaces.framework</groupId>
          <artifactId>richfaces-api</artifactId>
          <type>jar</type>
        </dependency>
        -->

        <!--
		<dependency>
		  <groupId>net.sf.ehcache</groupId>
		  <artifactId>ehcache</artifactId>
		  <version>${ehcache.jar.version}</version>
			  <type>jar</type>
		</dependency>
		-->

        <!-- hibernate -->
        <!-- Define hiberante artifacts versions -->
        <!-- Define dependency version of hibernate-core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Define dependency version of hibernate-entitymanager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Define dependency version of hibernate-validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- NOTE: hibernate-annotations are not included here, since hibernate-core 
        3.6.X contains former artifact. -->
        <!--
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-annotations</artifactId>
		<scope>compile</scope>
	</dependency>
	-->
	
        <!-- Define dependency version of hibernate-commons-annotations -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Define dependency version of hibernate-infinispan -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-infinispan</artifactId>
            <scope>compile</scope>
        </dependency>

        <!--
          JBoss Rules. Needed if you implement drools functionality, e.g. Seam Idendity
          see: samples/jboss-seam/examlpes/seamspace
        -->
        <dependency>
          <groupId>org.drools</groupId>
          <artifactId>drools-core</artifactId>
        </dependency>

        <dependency>
          <groupId>org.drools</groupId>
          <artifactId>drools-compiler</artifactId>
        </dependency>

        <!--
        <dependency>
          <groupId>org.drools</groupId>
          <artifactId>drools-api</artifactId>
        </dependency>

        <dependency>
          <groupId>org.drools</groupId>
          <artifactId>drools-decisiontables</artifactId>
        </dependency>

        <dependency>
          <groupId>org.drools</groupId>
          <artifactId>drools-templates</artifactId>
        </dependency>

        <dependency>
          <groupId>com.thoughtworks.xstream</groupId>
          <artifactId>xstream</artifactId>
        </dependency>

        <dependency>
          <groupId>xpp3</groupId>
          <artifactId>xpp3_min</artifactId>
        </dependency>
        -->

        <!-- rules + groovy -->
        <!--
        <dependency>
          <groupId>org.antlr</groupId>
          <artifactId>antlr-runtime</artifactId>
        </dependency>
        -->

        <!-- Added transient by JBoss Rules
        <dependency>
          <groupId>org.mvel</groupId>
          <artifactId>mvel2</artifactId>
          <version>${mvel.version}</version>
        </dependency>

        <dependency>
          <groupId>janino</groupId>
          <artifactId>janino</artifactId>
        </dependency>

        <dependency>
          <groupId>org.eclipse.jdt</groupId>
          <artifactId>core</artifactId>
        </dependency>
        -->

        <!-- JBoss jBPM -->
        <!--
        <dependency>
          <groupId>org.jbpm</groupId>
          <artifactId>jbpm-jpdl</artifactId>
        </dependency>
        -->

	<!--
	<dependency>
	   <groupId>org.hibernate</groupId>
	   <artifactId>hibernate-search</artifactId>
	   <version>${hibernate.legacy.search.version}</version>
	   <scope>provided</scope>
    <exclusions>
		<exclusion>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
		</exclusion>
    </exclusions>
    </dependency>
	<dependency>
	   <groupId>org.apache.lucene</groupId>
	   <artifactId>lucene-core</artifactId>
	   <scope>provided</scope>
	</dependency>

	<dependency>
	   <groupId>com.google.gwt</groupId>
	   <artifactId>gwt-user</artifactId>
	   <version>${gwt.version}</version>
	</dependency>
        -->
	<dependency>
		 <groupId>com.google.gwt</groupId>
		 <artifactId>gwt-servlet</artifactId>
	</dependency>

	<!-- remove andromda-script-wrappers and xml-apis because lib in app must be empty -->
	<!--
	<dependency>
		<groupId>org.andromda</groupId>
		<artifactId>andromda-script-wrappers</artifactId>
		<scope>provided</scope>
	</dependency>
	<dependency>
	    <groupId>xml-apis</groupId>
	    <artifactId>xml-apis</artifactId>
	    <scope>provided</scope>
	</dependency>
	-->
    </dependencies>
    <build>
        <finalName>${application.id}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/sql</directory>
                <targetPath>${target.dir}/sql</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
              <directory>src/main/config</directory>
              <targetPath>../${project.build.finalName}/META-INF/ds</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>${application.id}-ds.xml</include>
              </includes>
            </resource>
        </resources>

        <plugins>
            <!--
              Maven resources plugin The default resources folder for ear is the
              src/main/application folder. Stuff in this folder will go into the
              target ear folder. The projects *-ds.xml file is placed in the
              src/main/resources folder, so we'll have to use the
              maven-resources-plugin to copy the *-ds.xml file. The reason for
              this is that we need to control where to copy the *-ds.xml is in
              the target build. If we want to deploy the *-ds.xml file embedded
              into the ear project then the file is located in the target/ear root
              folder. If the *-ds.xml file should be deployed as a separate service,
              then the file is located the target folder. The explode profile
              will then copy the *-ds.xml file to the application server's deploy
              folder.
            -->
            <!--
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <executions>
                <execution>
                  <id>copy-app-ds-xml</id>
                  <phase>initialize</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                  -->
                    <!--
                      Comment out this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
                    -->
                    <!--
                    <outputDirectory>${project.build.directory}/${project.build.finalName}/META-INF/ds</outputDirectory>
                    -->
                    <!--
                      Uncomment this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    -->
                    <!--
                    <resources>
                      <resource>
                        <directory>src/main/config</directory>
                        <filtering>true</filtering>
                        <includes>
                          <include>${application.id}-ds.xml</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <version>${maven.ear.plugin.version}</version>
                <configuration>
                    <finalName>${application.id}-ear</finalName>
                    <displayName>${application.display.name}</displayName>
                    <description>${application.description}</description>
                    <version>${as.version}</version>
                    <!--
                    <generateApplicationXml>false</generateApplicationXml>
                    -->
                    <!--
                    <includeJar>false</includeJar>
                    <fileNameMapping>no-version</fileNameMapping>
                    -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <!--
                    <includes>**/*.xml</includes>
                    <excludes>**/jboss-app.xml</excludes>
                    -->
                    <!--
                    <artifactTypeMappings>
        	        <artifactTypeMapping type="seam-war" mapping="war"/>
        	    </artifactTypeMappings>
        	    <unpackTypes>war</unpackTypes>
        	    -->
        	    <!--<ejbVersion>3.0</ejbVersion>-->
                    <jboss>
                      <!--
                        To trigger the generation of the jboss-app.xml file you need to
                        configure the 'jboss' element. see:
                        http://maven.apache.org/plugins/maven-ear-plugin/usage.html and:
                        http://maven.apache.org/plugins/maven-ear-plugin/examples/generating-jboss-app.html
                      -->
                      <version>${jboss.ear.version}</version><!-- JBoss version -->

                      <!--
                      <loader-repository>org.andromda.timetracker:loader=${project.build.finalName}</loader-repository>
                      <loader-repository-config>java2ParentDelegation=false</loader-repository-config>
                      -->
                      <loader-repository>
                        <!--
                          seam.jboss.org is a Seam-specific scoped classloader. It acts as
                          a way for Seam to disassociate artifacts bundled with the
                          application from those that exist within the JBoss application
                          server's shared artifacts or JARs (for example, those that
                          reside in the default server's lib directory or in JBoss's
                          general lib directory).
                          The classloader is referenced in jboss-app.xml for EAR deployment and and in
                          jboss-web.xml for WAR deployment (SiA-2.5.3-p63).
                          see: http://www.jboss.org/community/wiki/classloadingconfiguration
                          see: http://www.mastertheboss.com/en/jboss-application-server/141-jboss-classloader.html
                        -->
                        seam.jboss.org:loader=${application.id}-ear
                      </loader-repository>

                      <!--
                        Comment out this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
                      -->
                      <data-sources>
                        <!--<data-source>META-INF/${application.id}-login-service.xml</data-source>-->
                        <data-source>META-INF/ds/${application.id}-ds.xml</data-source>
                      </data-sources>
                    </jboss>

                    <modules>
                        <!--
                        <jarModule>
                            <groupId>com.sun.el</groupId>
                            <artifactId>el-ri</artifactId>
                            <includeInApplicationXml>true</includeInApplicationXml>
                        </jarModule>
                        <jarModule>
                            <groupId>javax.el</groupId>
                            <artifactId>el-api</artifactId>
                            <includeInApplicationXml>true</includeInApplicationXml>
                        </jarModule>
                        -->
                        <!--
                        <jarModule>
                            <groupId>org.jboss.seam</groupId>
                            <artifactId>jboss-seam</artifactId>
                            <includeInApplicationXml>true</includeInApplicationXml>
                        </jarModule>
                        -->

                        <!--
                        <jarModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>common</artifactId>
                            <includeInApplicationXml>true</includeInApplicationXml>
                        </jarModule>
                        -->

                        <webModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>web</artifactId>
                            <contextRoot>/${application.id}</contextRoot>
                            <unpack>${application.unpack.modules}</unpack>
                        </webModule>

                        <ejbModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>core</artifactId>
                            <unpack>${application.unpack.modules}</unpack>
                        </ejbModule>

                        <ejbModule>
                            <groupId>org.jboss.seam</groupId>
                            <artifactId>jboss-seam</artifactId>
                        </ejbModule>
                    </modules>

                    <archive>
                      <manifestEntries>
                        <Build-Date>${timestamp}</Build-Date>
                        <Build-Revision>${buildNumber}</Build-Revision>
                        <Mode>${environment}</Mode>
                      </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- JBoss AS plugin to deploy ear -->
            <!-- mvn clean package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${maven.jboss.as.plugin.version}</version>
                <configuration>
                    <filename>${application.id}-ear.ear</filename>
                    <skip>false</skip>
                </configuration>
            </plugin>            
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>jboss-maven-plugin</artifactId>
                  <version>${maven.jboss.plugin.version}</version>
                  <configuration>
                     <jbossHome>${jboss.home}</jbossHome>
                     <serverName>${jboss.server}</serverName>
                     <fileNames>
                        <param>src/main/config/${application.id}-ds.xml</param>
                        <param>${project.build.directory}/${project.build.finalName}.war</param>
                     </fileNames>
                  </configuration>
               </plugin>            
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>
                        <copy todir="${project.basedir}/${target.dir}/site/sql" overwrite="true" failonerror="false">
                            <fileset dir="${project.basedir}/src/main/sql">
                                <include name="**/*"/>
                            </fileset>
                        </copy>
                    </target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <deployLocation>${jboss.deploy.directory}</deployLocation>
                    <!-- include the generated data source file -->
                    <includes>
                        <include>*ds.xml</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
					<!-- <version>${maven.source.plugin.version}</version>-->
				<executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- This profile here will allow you to specify -Ddeploy=link in order deploy an exploded ear using symbolic links,
             this allows you to easily edit things like jsp, xhtml, etc and just build the web module without having
             to deploy the ear -->
        <profile>
            <id>link</id>
            <activation>
                <property>
                    <name>deploy</name>
                    <value>link</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.andromda.maven.plugins</groupId>
                        <artifactId>andromdapp-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <deployLocation>${jboss.deploy.directory}</deployLocation>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
