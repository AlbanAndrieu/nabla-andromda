<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- These settings apply specifically to the andromda code generation process. To generate code without
    compiling or testing or packaging, run mvn install from /mda instead of from the root directory. -->

    <parent>
        <groupId>org.andromda.timetracker.ejb3</groupId>
        <artifactId>timetracker-ejb3</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>mda</artifactId>
    <packaging>pom</packaging>
    <name>[${project.parent.artifactId} :: EJB3 MDA] - ${project.artifactId} : ${project.version}</name>
    <dependencies>
        <dependency>
            <groupId>org.andromda.profiles.uml2</groupId>
            <artifactId>andromda-profile</artifactId>
            <type>xml.zip</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-spring-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-hibernate-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-ejb3-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-java-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-seam-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-deployment-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-database-cartridge</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.andromda.translationlibraries</groupId>
            <artifactId>andromda-ocl-validation-library</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.andromda.translationlibraries</groupId>
            <artifactId>andromda-ocl-query-library</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- added for debug purpose in eclipse -->
        <dependency>
            <groupId>org.andromda.metafacades</groupId>
            <artifactId>andromda-metafacades-emf-uml22</artifactId>
            <scope>runtime</scope>
        </dependency>

    </dependencies>
    <profiles>
         <profile>
            <id>mda</id>
            <activation>
                <property>
                    <name>!mda</name>
                </property>
            </activation>
            <build>
                <plugins>
            		<plugin>
            		    <groupId>org.andromda.maven.plugins</groupId>
            		    <artifactId>andromda-maven-plugin</artifactId>
            		    <version>${andromda.version}</version>
            		</plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <!-- This will overwrite top level .project and .classpath each time.
                         The maven Eclipse plugin in mda/pom.xml does a better job anyway. See mda/eclipse.bat.-->
                    <plugin>
                        <groupId>org.andromda.maven.plugins</groupId>
                        <artifactId>andromdapp-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>eclipse</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes>
                                <exclude>app/pom.xml</exclude>
                            </excludes>
                            <!--
                            <classpathMerge>
                                <![CDATA[
                                <classpathentry kind="var" path="M2_REPO/org/testng/testng/6.0.1/testng-6.0.1.jar"/>
                                ]]>
                            </classpathMerge>
                            -->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
	<profile>
		<id>xmi</id>
		<activation>
			<property>
				<name>profile.activation</name>
			</property>
		</activation>
		<build>
			<plugins>
		                <plugin>
		                	<groupId>org.apache.maven.plugins</groupId>
		                	<artifactId>maven-antrun-plugin</artifactId>
		                	<configuration>
		                		<target>
		                			<echo>Generate XMI from Database at ${buildNumber}. </echo>
		                			<property name="src.dir" value="." />
		                			<!--
		                				<property name="model.dir"
		                				value="${project.basedir}/test/mda/src/main/uml/"/>
		                			-->
		                			<property name="output.dir" value="${target.dir}/uml/" />
		                			<property name="lib.dir" value="${jdbc.driver.lib}" />
		                			<property name="mappings.dir" value="${configuration.mda.dir}" />
		                			<property name="build.dir" value="${target.dir}" />
		                			<path id="schema2xmi.classpath">
		                				<fileset dir="${lib.dir}">
		                					<include name="*.jar" />
		                				</fileset>
		                				<!--
		                				<fileset dir="${lib.dir}">
		                					<include name="*.zip" />
		                				</fileset>
		                				-->
		                			</path>
		                			<java classname="org.andromda.schema2xmi.Schema2XMI" fork="true">
		                				<classpath>
		                					<path refid="schema2xmi.classpath" />
		                					<path refid="maven.compile.classpath" />
		                				</classpath>
		                				<!--
		                					<arg value="-i"/> <arg
		                					value="jar:file:${basedir}/src/main/uml/${uml.type}/GuiMetafacadeModel.xml.zip!/GuiMetafacadeModel.xml"/>
		                				-->
		                				<arg value="-u" />
		                				<arg value="${jdbc.username}" />
		                				<arg value="-p" />
		                				<arg value="${jdbc.password}" />
		                				<!--
		                					<arg value="-s"/> <arg
		                					value="${maven.andromda.schema2xmi.schema}"/>
		                				-->
		                				<arg value="-c" />
		                				<arg value="${maven.andromda.schema2xmi.connectionUrl}" />
		                				<arg value="-d" />
		                				<arg value="${maven.andromda.schema2xmi.driverClass}" />
		                				<arg value="-m" />
		                				<arg value="file:${mappings.dir}/schema2xmi/mappings.xml" />
		                				<arg value="-o" />
		                				<arg value="${build.dir}/schema2xmi/transformed.xmi" />
		                				<arg value="-t" />
		                				<!--<arg value="[\p{Lower}\p{Upper}[_]]*"/>-->
		                				<arg value="[\p{Lower}\p{Upper}\digit]*" />
		                				<arg value="-P" />
		                				<arg value="${application.package}" />
		                				<arg value="-C" />
		                				<arg value="entity,persistent" />
		                				<arg value="-I" />
		                				<arg value="identifier" />
		                				<arg value="-V" />
		                				<arg value="@andromda.persistence.table" />
		                				<arg value="-v" />
		                				<arg value="@andromda.persistence.column" />
		                			</java>
		                		</target>
		                	</configuration>
		                	<executions>
		                		<execution>
		                			<!--<phase>process-classes</phase>-->
		                			<phase>package</phase>
		                			<goals>
		                				<goal>run</goal>
		                			</goals>
		                		</execution>
		                	</executions>
		                	<dependencies>
		                		<dependency>
		                			<groupId>${jdbc.groupId}</groupId>
		                			<artifactId>${jdbc.artifactId}</artifactId>
		                			<version>${jdbc.version}</version>
		                		</dependency>
                                        </dependencies>
		                </plugin>
			</plugins>
		</build>
		<dependencies>
               	    <dependency>
               	        <groupId>org.andromda</groupId>
               	        <artifactId>andromda-schema2xmi</artifactId>
               	        <scope>compile</scope>
               	    </dependency>
               	    <!-- START USED BY Schema2XMI -->
            	    <dependency>
            	        <groupId>commons-beanutils</groupId>
            	        <artifactId>commons-beanutils</artifactId>
            	    </dependency>
               	    <dependency>
               	        <groupId>org.andromda</groupId>
               	        <artifactId>andromda-core</artifactId>
               	        <scope>compile</scope>
               	        <exclusions>
               	            <exclusion>
               	                <groupId>log4j</groupId>
               	                <artifactId>log4j</artifactId>
               	            </exclusion>
               	        </exclusions>
               	    </dependency>
               	    <dependency>
               	    	<groupId>org.andromda.repositories</groupId>
               	    	<artifactId>andromda-repository-mdr-uml14</artifactId>
               	    </dependency>
               	    <dependency>
               	    	<groupId>org.andromda.metafacades</groupId>
               	    	<artifactId>andromda-metafacades-uml14</artifactId>
               	    	<scope>provided</scope>
               	    </dependency>
                    <dependency>
                        <groupId>org.andromda.translationlibraries</groupId>
                        <artifactId>andromda-ocl-translation-core</artifactId>
                        <scope>provided</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.andromda.translationlibraries</groupId>
                        <artifactId>andromda-ocl-validation-library</artifactId>
                        <scope>provided</scope>
                    </dependency>
               	    <!-- END USED BY Schema2XMI -->

    		</dependencies>
	</profile>
    </profiles>
    <build>
        <sourceDirectory>${project.basedir}/src/main/uml2</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin.version}</version>
                <configuration>
                   <filesets>
                       <fileset>
                           <directory>${mda.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${common.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${core.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${database.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${service.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${workflow.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${webservice.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <fileset>
                           <directory>${web.generated.java.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       <!--
                       <fileset>
                           <directory>${web.generated.web.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       -->
                   </filesets>
                </configuration>
            </plugin>
	    <plugin>
	    	<groupId>com.atlassian.maven.plugins</groupId>
	    	<artifactId>maven-clover2-plugin</artifactId>
	    	<configuration>
	    		<skip>true</skip>
	    	</configuration>
	    </plugin>
        </plugins>
    </build>
    <properties>
        <!-- if error occurs : Error running AndroMDA: invalid stream header -->
        <!-- close your jboss 7 -->
    	<model.base.name>timetracker</model.base.name>
    	<model.name>${model.base.name}-ejb3</model.name>
        <!-- Avoid JDK6 XJC runtime error on wdsl2java from conflicting Jaxb2.2 -->
        <!--<cxf.version>2.3.3</cxf.version>-->
        <!-- Versioned independently from CXF core -->
        <!--<cxf.xjc.version>2.3.0</cxf.xjc.version>-->
        <!--<model.uri>file:${nabla.mda.dir}/model/src/main/uml/${uml.type}/modules/${model.base.name}.uml</model.uri>-->
        <filter></filter>
        <validation>true</validation>
        <!-- ant script location for temp copy of resources -->
        <!--
        <andromda.project>${project.basedir}/..</andromda.project>
        <conf.dir>${project.basedir}/src/main/config</conf.dir>
        -->
        <!-- cartridge output locations -->
        <mda.generated.dir>${project.basedir}/../mda/${target.dir}/src/main/java</mda.generated.dir>
        <mda.manual.dir>${project.basedir}/../mda/src/main/java</mda.manual.dir>
        <sql.generated.dir>${project.basedir}/../app/src/main/sql</sql.generated.dir>

        <common.generated.dir>${project.basedir}/../common/${maven.build.generated}/main/java</common.generated.dir>
        <common.manual.dir>${project.basedir}/../common/src/main/java</common.manual.dir>

        <core.generated.dir>${project.basedir}/../core/${maven.build.generated}/main/java</core.generated.dir>
        <core.generated.test.dir>${project.basedir}/../core/${maven.build.generated}/main/java</core.generated.test.dir>
        <core.manual.dir>${project.basedir}/../core/src/main/java</core.manual.dir>
        <!--<core.manual.java.resources>${project.basedir}/../core/src/main/resources</core.manual.java.resources>-->
        <core.generated.resources.dir>${project.basedir}/../core/${maven.build.generated}/main/resources</core.generated.resources.dir>
        <core.manual.test.dir>${project.basedir}/../core/src/test/java</core.manual.test.dir>
        <core.manual.test.resources.dir>${project.basedir}/../core/src/test/resources</core.manual.test.resources.dir>

        <database.generated.dir>${project.basedir}/../database/${maven.build.generated}/main/java</database.generated.dir>
        <database.generated.test.dir>${project.basedir}/../database/${maven.build.generated}/main/java</database.generated.test.dir>
        <database.manual.dir>${project.basedir}/../database/src/main/java</database.manual.dir>
        <!--<database.manual.java.resources>${project.basedir}/../database/src/main/resources</database.manual.java.resources>-->
        <database.generated.resources.dir>${project.basedir}/../database/${maven.build.generated}/main/resources</database.generated.resources.dir>
        <database.manual.test.dir>${project.basedir}/../database/src/test/java</database.manual.test.dir>
        <database.manual.test.resources.dir>${project.basedir}/../database/src/test/resources</database.manual.test.resources.dir>

        <service.generated.dir>${project.basedir}/../service/${maven.build.generated}/main/java</service.generated.dir>
        <service.generated.test.dir>${project.basedir}/../service/${maven.build.generated}/main/java</service.generated.test.dir>
        <service.manual.dir>${project.basedir}/../service/src/main/java</service.manual.dir>
        <!--<service.manual.java.resources>${project.basedir}/../service/src/main/resources</service.manual.java.resources>-->
        <service.generated.resources.dir>${project.basedir}/../service/${maven.build.generated}/main/resources</service.generated.resources.dir>
        <service.manual.test.dir>${project.basedir}/../service/src/test/java</service.manual.test.dir>
        <service.manual.test.resources.dir>${project.basedir}/../service/src/test/resources</service.manual.test.resources.dir>

        <web.generated.java.dir>${project.basedir}/../web/${maven.build.generated}/main/java</web.generated.java.dir>
        <!--
        <web.generated.web.dir>${project.basedir}/../web/${maven.build.generated}/main/webapp</web.generated.web.dir>
        -->
        <web.generated.web.dir>${project.basedir}/../web/src/main/webapp</web.generated.web.dir>
        <web.manual.root.dir>${project.basedir}/../web/src/main</web.manual.root.dir>
        <web.manual.resources.dir>${web.manual.root.dir}/resources</web.manual.resources.dir>
        <web.manual.web.dir>${web.manual.root.dir}/webapp</web.manual.web.dir>
        <web.manual.dir>${web.manual.root.dir}/java</web.manual.dir>

        <webservice.project>${project.basedir}/../webservice</webservice.project>
        <webservice.generated.dir>${project.basedir}/../webservice/${maven.build.generated}/main/webapp</webservice.generated.dir>
        <webservice.manual.java.dir>${project.basedir}/../webservice/src/main/java</webservice.manual.java.dir>

        <workflow.generated.dir>${project.basedir}/../workflow/${maven.build.generated}/main/java</workflow.generated.dir>
        <workflow.manual.dir>${project.basedir}/../workflow/src/main</workflow.manual.dir>

        <application.config.dir>${project.basedir}/../app/src/main/config</application.config.dir>
        <application.metainf.dir>${project.basedir}/../app/src/main/application/META-INF</application.metainf.dir>
        <application.generated.dir>${project.basedir}/../app/${target.dir}/src</application.generated.dir>

		<!--<merge.templates.location>file:${project.basedir}/src/main/config/mappings</merge.templates.location>-->
		<merge.mappings.web>file:${project.basedir}/src/main/config/mappings/WebMergeMappings.xml</merge.mappings.web>
        <!--<merge.mappings.web>file:${merge.templates.location}/WebMergeMappings.xml</merge.mappings.web>-->
    </properties>
</project>
