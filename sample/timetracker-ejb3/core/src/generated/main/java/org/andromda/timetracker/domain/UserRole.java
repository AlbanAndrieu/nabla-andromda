// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package org.andromda.timetracker.domain;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.NotEmpty;
import org.jboss.seam.annotations.security.management.RoleConditional;
import org.jboss.seam.annotations.security.management.RoleGroups;
import org.jboss.seam.annotations.security.management.RoleName;

/**
 * TODO: Model Documentation for UserRole
 *
 * Autogenerated POJO EJB class for UserRole containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 */
@Entity
/**
 * Use components.xml to define Seam components
 * @org.jboss.seam.annotations.Name("userRole")
 *
 * Use components.xml to define Seam component scope type
 * @org.jboss.seam.annotations.Scope(org.jboss.seam.ScopeType.SESSION)
 *
 */
@Table(name="USER_ROLE")
@NamedQuery(name="UserRole.findAll", query="SELECT u FROM UserRole AS u")
public class UserRole implements Serializable, Comparable<UserRole>{
    private static final long serialVersionUID = 4491898486466294586L;

    // ----------- 3 Attribute Definitions ------------
    private Role role;
    private Boolean isConditional;
    private Long id;

    // --------- 1 Relationship Definitions -----------
    private Set<UserRole> groups = new HashSet<UserRole>();

    // ---- Manageable Display Attributes (Transient) -----

    // -------- 3 Attribute Accessors ----------
    /**
     * TODO: Model Documentation for UserRole.role
     * Get the role property.
     * @return Role The value of role
     */
    @Column(name="ROLE", nullable=false, insertable=true, updatable=true, columnDefinition="VARCHAR(20)")
    @Enumerated(EnumType.STRING)
    @NotNull(message="role is required")
    @NotEmpty(message = "You should enter a value for role.")

    @RoleName
    public Role getRole()
    {
        return this.role;
    }

    /**
     * TODO: Model Documentation for UserRole.role
     * Set the role property.
     * @param value the new value
     */
    public void setRole(Role value)
    {
        this.role = value;
    }

    /**
     * TODO: Model Documentation for UserRole.isConditional
     * Get the isConditional property.
     * @return Boolean The value of isConditional
     */
    @Column(name="IS_CONDITIONAL", insertable=true, updatable=true)

    @RoleConditional
    public Boolean getIsConditional()
    {
        return this.isConditional;
    }

    /**
     * TODO: Model Documentation for UserRole.isConditional
     * Set the isConditional property.
     * @param value the new value
     */
    public void setIsConditional(Boolean value)
    {
        this.isConditional = value;
    }

    /**
     * TODO: Model Documentation for UserRole.id
     * Get the id property.
     * @return Long The value of id
     */
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", unique=true, nullable=false, insertable=true, updatable=true)

    public Long getId()
    {
        return this.id;
    }

    /**
     * TODO: Model Documentation for UserRole.id
     * Set the id property.
     * @param value the new value
     */
    public void setId(Long value)
    {
        this.id = value;
    }


    // ------------- 1 Relations ------------------
    /**
     * TODO: Model Documentation for UserRole
     * Get the groups Collection
     * @return Set<UserRole>
     */
    @ManyToMany()
    @JoinTable
    (
        name="ROLES2GROUPS",
        joinColumns={@JoinColumn(name="ROLES_ID", referencedColumnName="ID")},
        inverseJoinColumns={@JoinColumn(name="GROUPS_ID", referencedColumnName="ID")}
    )
    @RoleGroups
    public Set<UserRole> getGroups()
    {
        return this.groups;
    }

    /**
     * TODO: Model Documentation for UserRole
     * Set the groups
     * @param groupsIn
     */
    public void setGroups (Set<UserRole> groupsIn)
    {
        this.groups = groupsIn;
    }

    // --------------- Constructors -----------------

    /**
     * Default empty no-arg constructor
     */
    public UserRole()
    {
        // Default empty constructor
    }

    /**
     * Constructor with all updatable Entity attributes except auto incremented identifiers.
     *
     * @param role Role value for the role property true  1
     * @param isConditional Boolean value for the isConditional property false  0
     */
    public UserRole(Role role, Boolean isConditional)
    {
        setRole(role);
        setIsConditional(isConditional);
    }

    /**
     * Constructor with required Entity attributes except auto incremented identifiers.
     *
     * @param role Value for the role property
     */
    public UserRole(Role role)
    {
        setRole(role);
    }

    /**
     * Constructor with all Entity attribute values and CMR relations.
     *
     * @param role Role value for the role property
     * @param isConditional Boolean value for the isConditional property
     * @param groups Set<UserRole> value for the groups relation
     */
    public UserRole(Role role, Boolean isConditional, Set<UserRole> groups)
    {
        // 2 updatableAttributes
        setRole(role);
        setIsConditional(isConditional);

        // 1 relations
        setGroups(groups);
    }

    // -------- Common Methods -----------
    /**
     * Indicates if the argument is of the same type and all values are equal.
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object)
    {
        if (null == object)
        {
            return false;
        }
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof UserRole))
        {
            return false;
        }
        final UserRole that = (UserRole)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     * @return int The hash code value
     * @see Object#hashCode
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     * @see Object#toString
     */
    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("UserRole(");
        sb.append(" role=").append(getRole());
        sb.append(" isConditional=").append(getIsConditional());
        sb.append(" id=").append(getId());
        sb.append(" groups=").append(getGroups());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see Comparable#compareTo
     */
            @Override
    public int compareTo(UserRole o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getRole() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getRole().compareTo(o.getRole()));
            }
            if (this.getIsConditional() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getIsConditional().compareTo(o.getIsConditional()));
            }
        }
        return cmp;
    }


}