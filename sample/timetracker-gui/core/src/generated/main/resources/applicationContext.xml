<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by: applicationContext.xml.vsl in andromda-spring-cartridge. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

    <!-- applicationContext merge-point -->
    <bean id="hibernateMappingLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- applicationContext hibernateMappingLocations merge-point -->
                <value>classpath:org/andromda/timetracker/domain/User.hbm.xml</value>
                <value>classpath:org/andromda/timetracker/domain/Task.hbm.xml</value>
                <value>classpath:org/andromda/timetracker/domain/TimeAllocation.hbm.xml</value>
                <value>classpath:org/andromda/timetracker/domain/Timecard.hbm.xml</value>
                <value>classpath:org/andromda/timetracker/domain/UserRole.hbm.xml</value>
            </list>
         </property>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <!-- add specific (non-supported in the Spring cartridge) hibernate properties here -->
            </props>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" ref="hibernateMappingLocations"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <!-- applicationContext sessionFactory merge-point -->
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- applicationContext hibernateInterceptor merge-point -->
    </bean>


    <bean id="org.andromda.timetracker.domain.UserDaoImpl" class="org.andromda.timetracker.domain.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <lookup-method name="getUserRoleDao" bean="userRoleDao"/>
        <!-- User entity property merge-point -->
    </bean>

    <!-- User Entity Proxy with inner User Entity implementation -->
    <bean id="userDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.domain.UserDaoImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.domain.UserDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.domain.TaskDaoImpl" class="org.andromda.timetracker.domain.TaskDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Task entity property merge-point -->
    </bean>

    <!-- Task Entity Proxy with inner Task Entity implementation -->
    <bean id="taskDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.domain.TaskDaoImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.domain.TaskDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.domain.TimeAllocationDaoImpl" class="org.andromda.timetracker.domain.TimeAllocationDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- TimeAllocation entity property merge-point -->
    </bean>

    <!-- TimeAllocation Entity Proxy with inner TimeAllocation Entity implementation -->
    <bean id="timeAllocationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.domain.TimeAllocationDaoImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.domain.TimeAllocationDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.domain.TimecardDaoImpl" class="org.andromda.timetracker.domain.TimecardDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <lookup-method name="getTimeAllocationDao" bean="timeAllocationDao"/>
        <!-- Timecard entity property merge-point -->
    </bean>

    <!-- Timecard Entity Proxy with inner Timecard Entity implementation -->
    <bean id="timecardDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.domain.TimecardDaoImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.domain.TimecardDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.domain.UserRoleDaoImpl" class="org.andromda.timetracker.domain.UserRoleDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- UserRole entity property merge-point -->
    </bean>

    <!-- UserRole Entity Proxy with inner UserRole Entity implementation -->
    <bean id="userRoleDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.domain.UserRoleDaoImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.domain.UserRoleDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- Service Transactional Interceptor -->
    <bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource">
            <value>
                org.andromda.timetracker.service.UserService.getAllUsers=PROPAGATION_REQUIRED
                org.andromda.timetracker.service.UserService.getUser=PROPAGATION_REQUIRED
                org.andromda.timetracker.service.UserService.registerUser=PROPAGATION_REQUIRED
                org.andromda.timetracker.service.UserService.removeUser=PROPAGATION_REQUIRED
                org.andromda.timetracker.service.TimeTrackingService.findTimecards=PROPAGATION_REQUIRED
                org.andromda.timetracker.service.SecurityService.getUserDetails=PROPAGATION_REQUIRED
            </value>
        </property>
    <!-- applicationContext serviceTransactionInterceptor merge-point -->
    </bean>

    <bean id="org.andromda.timetracker.service.UserServiceImpl" class="org.andromda.timetracker.service.UserServiceImpl" >
        <property name="userDao" ref="userDao"/>
        <!-- UserService service property merge-point -->
    </bean>

    <!-- UserService Service Proxy with inner UserService Service Implementation -->
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.service.UserServiceImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.service.UserService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.service.TimeTrackingServiceImpl" class="org.andromda.timetracker.service.TimeTrackingServiceImpl" >
        <property name="timecardDao" ref="timecardDao"/>
        <!-- TimeTrackingService service property merge-point -->
    </bean>

    <!-- TimeTrackingService Service Proxy with inner TimeTrackingService Service Implementation -->
    <bean id="timeTrackingService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.service.TimeTrackingServiceImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.service.TimeTrackingService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.andromda.timetracker.service.SecurityServiceImpl" class="org.andromda.timetracker.service.SecurityServiceImpl" >
        <property name="userDao" ref="userDao"/>
        <!-- SecurityService service property merge-point -->
    </bean>

    <!-- SecurityService Service Proxy with inner SecurityService Service Implementation -->
    <bean id="securityService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.andromda.timetracker.service.SecurityServiceImpl"/>
        <property name="proxyInterfaces" value="org.andromda.timetracker.service.SecurityService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>
