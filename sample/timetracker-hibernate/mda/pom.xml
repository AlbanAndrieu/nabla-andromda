<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<!-- These settings apply specifically to the andromda code generation process. To generate code without
    compiling or testing or packaging, run mvn install from /mda instead of from the root directory. -->

	<parent>
		<groupId>org.andromda.timetracker.hibernate</groupId>
		<artifactId>timetracker-hibernate</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>mda</artifactId>
	<packaging>pom</packaging>
	<name>TimeTracker Hibernate MDA</name>
	<properties>

		<application.config.dir>${project.basedir}/../app/src/main/config</application.config.dir>
		<application.generated.dir>${project.basedir}/../app/${target.dir}/src</application.generated.dir>
		<application.metainf.dir>${project.basedir}/../app/src/main/application/META-INF</application.metainf.dir>

		<common.generated.dir>${project.basedir}/../common/${maven.build.generated}/main/java</common.generated.dir>
		<common.manual.dir>${project.basedir}/../common/src/main/java</common.manual.dir>

		<core.generated.dir>${project.basedir}/../core/${maven.build.generated}/main/java</core.generated.dir>
		<!--<core.manual.java.resources>${project.basedir}/../core/src/main/resources</core.manual.java.resources>-->
		<core.generated.java.resources>${project.basedir}/../core/${maven.build.generated}/main/resources</core.generated.java.resources>
		<core.generated.test.dir>${project.basedir}/../core/${maven.build.generated}/main/java</core.generated.test.dir>
		<core.manual.dir>${project.basedir}/../core/src/main/java</core.manual.dir>
		<core.manual.java.dir>${project.basedir}/../core/src/main/java</core.manual.java.dir>
		<core.manual.test.dir>${project.basedir}/../core/src/test/java</core.manual.test.dir>
		<core.manual.test.resources>${project.basedir}/../core/src/test/resources</core.manual.test.resources>
		<!-- Avoid JDK6 XJC runtime error on wdsl2java from conflicting Jaxb2.2 -->
		<cxf.version>2.3.3</cxf.version>
		<!-- Versioned independently from CXF core -->
		<cxf.xjc.version>2.3.0</cxf.xjc.version>
		<!--<model.uri>file:${nabla.mda.dir}/model/src/main/uml/${uml.type}/modules/${model.base.name}.uml</model.uri>-->
		<filter></filter>
		<!-- ant script location for temp copy of resources -->
		<!--
        <andromda.project>${project.basedir}/..</andromda.project>
        <conf.dir>${project.basedir}/src/main/config</conf.dir>
        -->
		<!-- cartridge output locations -->
		<!--
        <common.generated.dir>${project.basedir}/../common/target/src/main/java</common.generated.dir>
        <common.manual.dir>${project.basedir}/../common/src/main/java</common.manual.dir>
        <core.generated.dir>${project.basedir}/../core/target/src/main/java</core.generated.dir>
        <core.manual.dir>${project.basedir}/../core/src/main/java</core.manual.dir>
        <core.manual.java.dir>${project.basedir}/../core/src/main/java</core.manual.java.dir>
        <core.manual.java.resources>${project.basedir}/../core/src/main/resources</core.manual.java.resources>
        <core.manual.test.dir>${project.basedir}/../core/src/test/java</core.manual.test.dir>
        <core.manual.test.resources>${project.basedir}/../core/src/test/resources</core.manual.test.resources>
        <web.generated.dir>${project.basedir}/../web/target</web.generated.dir>
        <web.generated.java.dir>${web.generated.dir}/src/main/java</web.generated.java.dir>
        <web.generated.web.dir>${web.generated.dir}/src/main/webapp</web.generated.web.dir>
        <web.manual.dir>${project.basedir}/../web/src/main</web.manual.dir>
        <web.manual.web.dir>${web.manual.dir}/webapp</web.manual.web.dir>
        <web.manual.java.dir>${web.manual.dir}/java</web.manual.java.dir>
        -->

		<mda.generated.dir>${project.basedir}/../mda/${target.dir}/src/main/java</mda.generated.dir>
		<mda.manual.dir>${project.basedir}/../mda/src/main/java</mda.manual.dir>

		<!--<merge.templates.location>file:${project.basedir}/src/main/config/mappings</merge.templates.location>-->
		<merge.mappings.web>file:${project.basedir}/src/main/config/mappings/WebMergeMappings.xml</merge.mappings.web>
		<model.base.name>timetracker</model.base.name>
		<model.name>${model.base.name}-hibernate</model.name>
		<validation>true</validation>

		<web.generated.java.dir>${project.basedir}/../web/${maven.build.generated}/main/java</web.generated.java.dir>
		<web.generated.web.dir>${project.basedir}/../web/${maven.build.generated}/main/webapp</web.generated.web.dir>
		<web.manual.dir>${project.basedir}/../web/src/main</web.manual.dir>
		<web.manual.java.dir>${web.manual.dir}/java</web.manual.java.dir>
		<web.manual.web.dir>${web.manual.dir}/webapp</web.manual.web.dir>
		<webservice.generated.dir>${project.basedir}/../webservice/${maven.build.generated}/main/webapp</webservice.generated.dir>
		<webservice.manual.java.dir>${project.basedir}/../webservice/src/main/java</webservice.manual.java.dir>

		<webservice.project>${project.basedir}/../webservice</webservice.project>

		<workflow.generated.dir>${project.basedir}/../workflow/${maven.build.generated}/main/java</workflow.generated.dir>
		<workflow.manual.dir>${project.basedir}/../workflow/src/main</workflow.manual.dir>
		<!--<merge.mappings.web>file:${merge.templates.location}/WebMergeMappings.xml</merge.mappings.web>-->
	</properties>
	<dependencies>

		<!-- added for debug purpose -->
		<!--
        <dependency>
            <groupId>org.andromda.metafacades</groupId>
            <artifactId>andromda-metafacades-emf-uml2</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
        -->

		<!-- added for debug purpose in eclipse -->
		<dependency>
			<groupId>org.andromda.metafacades</groupId>
			<artifactId>andromda-metafacades-emf-uml22</artifactId>
			<version>${andromda.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.andromda.profiles.uml2</groupId>
			<artifactId>andromda-profile</artifactId>
			<version>${andromda.version}</version>
			<type>xml.zip</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.andromda.cartridges</groupId>
			<artifactId>andromda-spring-cartridge</artifactId>
			<version>${andromda.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.andromda.cartridges</groupId>
			<artifactId>andromda-hibernate-cartridge</artifactId>
			<version>${andromda.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.andromda.cartridges</groupId>
			<artifactId>andromda-java-cartridge</artifactId>
			<version>${andromda.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.andromda.cartridges</groupId>
			<artifactId>andromda-jsf-cartridge</artifactId>
			<version>${andromda.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.andromda.translationlibraries</groupId>
			<artifactId>andromda-ocl-validation-library</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.andromda.translationlibraries</groupId>
			<artifactId>andromda-ocl-query-library</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>${nabla.mda.dir}/model/src/main/uml/${uml.type}/modules</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.plugin.version}</version>
				<configuration>
					<filesets>
						<!--
                       <fileset>
                           <directory>${mda.generated.dir}</directory>
                           <includes>
                               <include>**/*.xml</include>
                               <include>**/*.properties</include>
                               <include>**/*.java</include>
                           </includes>
                       </fileset>
                       -->
						<fileset>
							<directory>${common.generated.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${core.generated.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${workflow.generated.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${webservice.generated.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${web.generated.java.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${web.generated.web.dir}</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
								<include>**/*.java</include>
							</includes>
						</fileset>
						<fileset>
							<directory>${project.basedir}/null</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>mda</id>
			<activation>
				<property>
					<name>!mda</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.andromda.maven.plugins</groupId>
						<artifactId>andromda-maven-plugin</artifactId>
						<version>${andromda.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>eclipse</id>
			<build>
				<plugins>
					<!-- This will overwrite top level .project and .classpath each time.
                         The maven Eclipse plugin in mda/pom.xml does a better job anyway. See mda/eclipse.bat.-->
					<plugin>
						<groupId>org.andromda.maven.plugins</groupId>
						<artifactId>andromdapp-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>eclipse</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludes>
								<exclude>app/pom.xml</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>xmi</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<!--<phase>process-classes</phase>-->
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<target>
								<echo>Generate XMI from Database at ${buildNumber}.</echo>
								<property name="src.dir" value="."></property>
								<!--
		                				<property name="model.dir"
		                				value="${project.basedir}/test/mda/src/main/uml/"/>
		                			-->
								<property name="output.dir" value="${target.dir}/uml/"></property>
								<property name="lib.dir" value="${jdbc.driver.lib}"></property>
								<property name="mappings.dir" value="${configuration.mda.dir}"></property>
								<property name="build.dir" value="${target.dir}"></property>
								<path id="schema2xmi.classpath">
									<fileset dir="${lib.dir}">
										<include name="*.jar"></include>
									</fileset>
									<!--
		                				<fileset dir="${lib.dir}">
		                					<include name="*.zip" />
		                				</fileset>
		                				-->
								</path>
								<java classname="org.andromda.schema2xmi.Schema2XMI" fork="true">
									<classpath>
										<path refid="schema2xmi.classpath"></path>
										<path refid="maven.compile.classpath"></path>
									</classpath>
									<!--
		                					<arg value="-i"/> <arg
		                					value="jar:file:${basedir}/src/main/uml/${uml.type}/GuiMetafacadeModel.xml.zip!/GuiMetafacadeModel.xml"/>
		                				-->
									<arg value="-u"></arg>
									<arg value="${jdbc.username}"></arg>
									<arg value="-p"></arg>
									<arg value="${jdbc.password}"></arg>
									<!--
		                					<arg value="-s"/> <arg
		                					value="${maven.andromda.schema2xmi.schema}"/>
		                				-->
									<arg value="-c"></arg>
									<arg value="${maven.andromda.schema2xmi.connectionUrl}"></arg>
									<arg value="-d"></arg>
									<arg value="${maven.andromda.schema2xmi.driverClass}"></arg>
									<arg value="-m"></arg>
									<arg value="file:${mappings.dir}/schema2xmi/mappings.xml"></arg>
									<arg value="-o"></arg>
									<arg value="${build.dir}/schema2xmi/transformed.xmi"></arg>
									<arg value="-t"></arg>
									<!--<arg value="[\p{Lower}\p{Upper}[_]]*"/>-->
									<arg value="[\p{Lower}\p{Upper}\digit]*"></arg>
									<arg value="-P"></arg>
									<arg value="${application.package}"></arg>
									<arg value="-C"></arg>
									<arg value="entity,persistent"></arg>
									<arg value="-I"></arg>
									<arg value="identifier"></arg>
									<arg value="-V"></arg>
									<arg value="@andromda.persistence.table"></arg>
									<arg value="-v"></arg>
									<arg value="@andromda.persistence.column"></arg>
								</java>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.andromda</groupId>
					<artifactId>andromda-schema2xmi</artifactId>
					<version>${andromda.version}</version>
					<scope>compile</scope>
				</dependency>
				<!-- START USED BY Schema2XMI -->
				<dependency>
					<groupId>org.andromda</groupId>
					<artifactId>andromda-core</artifactId>
					<version>${andromda.version}</version>
					<scope>compile</scope>
					<exclusions>
						<exclusion>
							<artifactId>log4j</artifactId>
							<groupId>log4j</groupId>
						</exclusion>
					</exclusions>
				</dependency>
				<dependency>
					<groupId>org.andromda.repositories</groupId>
					<artifactId>andromda-repository-mdr-uml14</artifactId>
					<version>${andromda.version}</version>
				</dependency>
				<dependency>
					<groupId>org.andromda.metafacades</groupId>
					<artifactId>andromda-metafacades-uml14</artifactId>
					<version>${andromda.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.andromda.translationlibraries</groupId>
					<artifactId>andromda-ocl-translation-core</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.andromda.translationlibraries</groupId>
					<artifactId>andromda-ocl-validation-library</artifactId>
					<scope>provided</scope>
				</dependency>
				<!-- END USED BY Schema2XMI -->

			</dependencies>
		</profile>
	</profiles>

</project>
