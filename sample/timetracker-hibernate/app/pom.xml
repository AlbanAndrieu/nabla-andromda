<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.andromda.timetracker.hibernate</groupId>
        <artifactId>timetracker-hibernate</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    
    <modelVersion>4.0.0</modelVersion>    
    <artifactId>app</artifactId>
    <packaging>ear</packaging>
    <name>TimeTracker Hibernate Application</name>
    <dependencies>
        <!-- jar dependencies not needed if not using EJBs -->
        <!--dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
        </dependency-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <!--dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency-->
        <!-- remove andromda-script-wrappers and xml-apis because lib in app must be empty -->
        <!--
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-script-wrappers</artifactId>
            <scope>provided</scope>
        </dependency>
	    <dependency>
	        <groupId>xml-apis</groupId>
	        <artifactId>xml-apis</artifactId>
	        <scope>provided</scope>
	    </dependency>
	    -->
    </dependencies>
    <build>
        <finalName>${application.id}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/config</directory>
                <targetPath>../</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/application</directory>
                <targetPath>../${application.id}-${project.version}</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/sql</directory>
                <targetPath>${target.dir}/sql</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <generateApplicationXml>true</generateApplicationXml>
                    <includeJar>false</includeJar>
                    <fileNameMapping>no-version</fileNameMapping>
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <!--
                    <includes>**/*.xml</includes>
                    <excludes>**/jboss-app.xml</excludes>
                    -->
                    <version>6</version><!-- Java EE 6 -->
                    <modules>
                        <!--jarModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>common</artifactId>
                            <includeInApplicationXml>false</includeInApplicationXml>
                        </jarModule>
                        <ejbModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>core</artifactId>
                        </ejbModule-->
                        <webModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>web</artifactId>
                            <contextRoot>/${application.id}</contextRoot>
                        </webModule>
                    </modules>
                    <jboss>
                        <version>5</version>
                        <loader-repository>org.andromda.timetracker:loader=${project.build.finalName}</loader-repository>
                        <loader-repository-config>java2ParentDelegation=false</loader-repository-config>
                    </jboss>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>
                        <copy todir="${project.basedir}/${target.dir}/site/sql" overwrite="true" failonerror="false">
                            <fileset dir="${project.basedir}/src/main/sql">
                                <include name="**/*"/>
                            </fileset>
                        </copy>
                    </target>
                </configuration>
            </plugin>            
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <deployLocation>${jboss.home}/server/default/deploy</deployLocation>
                    <!-- include the generated data source file -->
                    <includes>
                        <include>*ds.xml</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-source-plugin</artifactId>
		        <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- This profile here will allow you to specify -Ddeploy=link in order deploy an exploded ear using symbolic links,
             this allows you to easily edit things like jsp, xhtml, etc and just build the web module without having
             to deploy the ear -->
        <profile>
            <id>link</id>
            <activation>
                <property>
                    <name>deploy</name>
                    <value>link</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.andromda.maven.plugins</groupId>
                        <artifactId>andromdapp-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <deployLocation>${jboss.home}/server/default/deploy</deployLocation>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
