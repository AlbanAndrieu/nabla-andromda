#set ($generatedFile = "${manageable.manageableValueObjectFullPath}.java")
##
##  START TEMPLATE
##
// license-header java merge-point
// Generated by: crud/SpringCrudValueObject.vsl in andromda-spring-cartridge.
package $manageable.manageablePackageName;

/**
$manageable.getDocumentation(" * ")
 */
public class $manageable.manageableValueObjectClassName
#if ($manageable.generalization)
    extends $manageable.generalization.fullyQualifiedManageableValueObjectName
#else
    implements java.io.Serializable
#end
{
#if (!$manageable.generalization)
    /** The serial version UID of this class. Needed for serialization. */
    private static final long serialVersionUID = ${manageable.serialVersionUID}L;

#end
#foreach ($member in $manageable.getAttributes(false))
    private $member.type.fullyQualifiedName $member.name;

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $member.type.fullyQualifiedName ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($member.type.fullyQualifiedName ${member.name}In)
    {
        this.$member.name = ${member.name}In;
    }

#end
#foreach ($member in $manageable.manageableAssociationEnds)
#if (!$manageable.generalization.manageableAssociationEnds.contains($member))## do not process associations defined in an ancestor
#if ($member.type.compositeIdentifier)
#set ($fieldType = "Object")
#else
#set ($fieldType = $member.type.fullyQualifiedIdentifierTypeName)
#end
#if ($member.many)
#set ($fieldType = "${fieldType}[]")
#end
    private $fieldType $member.name;

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $fieldType ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($fieldType ${member.name}In)
    {
        this.$member.name = ${member.name}In;
    }

#if ($member.type.displayAttribute.name != $member.type.identifierName)
#set ($fieldType = $member.type.displayAttribute.type.fullyQualifiedName)
#set ($labelSuffix = "Label")
#if ($member.many)
#set ($fieldType = "${fieldType}[]")
#set ($labelSuffix = "${labelSuffix}s")
#end
    private $fieldType ${member.name}${labelSuffix};

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $fieldType ${member.getterName}${labelSuffix}()
    {
        return this.${member.name}${labelSuffix};
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}${labelSuffix}In
     */
    $member.visibility void ${member.setterName}${labelSuffix}($fieldType ${member.name}${labelSuffix}In)
    {
        this.${member.name}${labelSuffix} = ${member.name}${labelSuffix}In;
    }
#end
#end
#end
}