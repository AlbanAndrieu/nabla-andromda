<?xml version="1.0" encoding="UTF-8" ?>

<namespace name="jsf">
    <components>
        <component name="cartridge">
            <path>META-INF/andromda/cartridge.xml</path>
        </component>
        <component name="metafacades">
            <path>META-INF/andromda/metafacades.xml</path>
        </component>
        <component name="profile">
            <path>META-INF/andromda/profile.xml</path>
        </component>
    </components>
    <properties>
        <!-- namespace-propertyGroup merge-point -->
        <propertyGroup name="Outlets">
            <documentation>
                Defines the locations to which output is generated.
            </documentation>
            <property name="configuration">
                <documentation>
                    The location to which configuration files are generated. These are the files
                    that typically appear in WEB-INF, such as faces-config.xml, web.xml, etc.
                </documentation>
            </property>
            <property name="custom-configuration" required="false">
                <documentation>
                    The location to which any customizable configuration files are generated.
                </documentation>
            </property>
            <property name="custom-resources" required="false">
                <documentation>
                    The location to which any customizable resources will be generated.
                </documentation>
            </property>
            <property name="libraries" required="false">
                <documentation>
                    The location to which JSF libraries will be generated (these are the libraries required for JSF support,
                    myfaces libraries, etc).  If this isn't defined, its expected that the libraries will be provided by another means.
                </documentation>
            </property>
            <property name="controllers">
                <documentation>
                    The location to which any controllers are generated (this outlet
                    contains classes which are fully generated and should not be
                    touched).
                </documentation>
            </property>
            <property name="controller-impls">
                <documentation>
                    The location to which controller implementations are generated (these
                    are where your hooks go to your services).
                </documentation>
            </property>
            <property name="managed-beans">
                <documentation>
                    The location to which any additional managed beans are generated (including
                    layout options, etc).
                </documentation>
            </property>
            <property name="messages">
                <documentation>
                    The location to which message resource bundles are generated.
                </documentation>
            </property>
            <property name="views">
                <documentation>
                    Where the application views (JSPs, Facelets, etc) are output.
                </documentation>
            </property>
            <property name="forms">
                <documentation>
                    The forms to which input is stored are output here.
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Configuration">
            <documentation>
               The properties that provide configuration of the JSF configuration files.
            </documentation>
            <property name="facesConfig">
                <default>faces-config.xml</default>
                <documentation>
                    The name of the JSF configuration file (this file stores the JSF managed bean
                    form information and navigation rules).
                </documentation>
            </property>
            <property name="facesConfigFiles" required="false">
                <documentation>
                    Comma separated list of URIs of (additional) faces config files.
                    (e.g. /WEB-INF/jsf-config.xml).  See JSF 1.0 PRD2, 10.3.2
                </documentation>
            </property>
            <property name="formScope">
                <default>request</default>
                <documentation>
                    The scope to given the forms.  This value can be overriddem by a tagged value.
                </documentation>
            </property>
            <property name="controllerScope">
                <default>request</default>
                <documentation>
                    The scope to given the controllers.
                </documentation>
            </property>
            <property name="navigationBeanScope">
                <default>request</default>
                <documentation>
                    The scope to given the navigation items.
                </documentation>
            </property>
            <property name="facesServletExtension">
                <default>jsf</default>
                <documentation>
                    The extension used for the application's handling of JSF pages.
                </documentation>
            </property>
            <property name="odsExportExtension">
                <default>ods</default>
                <documentation>
                    The extension used for the ODS (Open Document Spreadsheet) export.
                </documentation>
            </property>
            <property name="fileUploadMaxMemoryPerRequest">
                <default>512000</default>
                <documentation>
                    Maximum memory per request (in bytes) for file uploads.
                </documentation>
            </property>
            <property name="fileUploadMaxDiskSpacePerRequest">
                <default>10240000</default>
                <documentation>
                    Maximum memory per request (in bytes) for file uploads.
                </documentation>
            </property>
            <property name="navigationUsesRedirect">
                <default>true</default>
                <documentation>
                    Uses 'redirect' instead of 'forward' to navigate between views.
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="UI Layout">
            <documentation>
                Properties related to the configuration of the user interface layout.
            </documentation>
            <property name="enablePreferences">
                <default>true</default>
                <documentation>
                    Whether or not a preferences menu item should be included in the menu (this
                    menu item allows you to control skinning, etc).
                </documentation>
            </property>
            <property name="preferencesClassName">
                <default>Preferences</default>
                <documentation>
                    Defines the name of the preferences class (which allows dynamic control
                    of the UI's view preferences; skinning, etc).
                </documentation>
            </property>
            <property name="skin">
                <default>default</default>
                <documentation>
                    The default skin to be applied (i.e look and feel of the application).
                    If you use 'none', it will disable the skinning feature.
                </documentation>
            </property>
            <property name="preferencesBeanName">
                <default>preferences</default>
                <documentation>
                    Defines the bean name under which the preferences class will be stored.
                </documentation>
            </property>
            <property name="maxTableRows">
                <default>10</default>
                <documentation>
                    The default value to set for the maximum rows displayed in a table.
                </documentation>
            </property>
            <property name="navigationStyle">
            	<default>sidebar</default>
            	<documentation>Controls the way navigation items are displayed</documentation></property>
        </propertyGroup>
        <propertyGroup name="Messages and i18n">
            <documentation>
                Properties related to the configuration of messages and internationalization in general.
            </documentation>
            <property name="applicationName" required="true">
                <documentation>
                    The name of the application (this is used as the display
                    name of the application).
                </documentation>
            </property>
            <property name="normalizeMessages">
                <default>true</default>
                <documentation>
                    Denotes the way application resource messages ought to be generated.
                    When messages are normalized it means that elements with the same name
                    will reuse the same label, even if they are located in entirely different
                    use-cases or pages.
                    This results in resource bundles that are not only smaller in size but
                    also more straightforward to translate. The downside is that it will be
                    less evident to customize labels for certain fields (which is rarely the
                    case anyway).
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Views">
            <documentation>
                Properties that configure view information.
            </documentation>
            <property name="welcomeFileName">
                <default>index.jsp</default>
                <documentation>
                    The path of the file that will be the welcome file (minus the extension).
                </documentation>
            </property>
            <property name="loginFileName">
                <default>login</default>
                <documentation>
                    The path to the file that provides the login page (minus the extension).
                </documentation>
            </property>
            <property name="logoutFileName">
                <default>logout</default>
                <documentation>
                    The path to the file that provides application logout (minus the extension)
                </documentation>
            </property>
            <property name="defaultMultiSelectSize">
                <default>3</default>
                <documentation>
                    The default size to use for multi select boxes.
                </documentation>
            </property>
            <property name="enableFaceletsDevelopmentSupport">
                <default>false</default>
                <documentation>
                    Whether or not the Facelet development support should be enabled (in the generated web.xml), this is
                    useful to enable when developing with Facelets, however should be disabled when going to production.
                </documentation>
            </property>
            <property name="enableMyFacesDevelopmentSupport">
                <default>false</default>
                <documentation>
                    Whether or not the MyFaces development support should be enabled (in the generated web.xml), this is
                    useful to enable when developing with MyFaces, however should be disabled when going to production.
                </documentation>
            </property>
            <property name="defaultDateFormat">
                <default>MM/dd/yyyy</default>
                <documentation>
                    The default date format to use in case it has not been explicitly
                    specified, for event parameters.
                    Take a look
                    <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/text/SimpleDateFormat.html">here</a>
                    to see how to properly construct date formats.
                </documentation>
            </property>
            <property name="strictDateTimeFormat">
                <default>false</default>
                <documentation>
                    Specifies whether or not date and time formats are to be strictly matched.
                    This property takes either true or false as values. If set to true all dates and times
                    entered by the end-user will fail validation if they do not strictly adhere to their given format.
                    Note that this strictness can always be overriden locally
                    using the andromda_struts_view_field_format tagged value.
                </documentation>
            </property>
            <property name="defaultTimeFormat">
                <default>HH:mm</default>
                <documentation>
                    The default time format to use when it has not been explicitly
                    specified for event parameters. Take a look
                    <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/text/SimpleDateFormat.html">here</a>
                    to see how to properly construct time formats.
                </documentation>
            </property>
            <property name="defaultInputColumnCount" required="false">
                <documentation>
                    If specified denotes the default length of text input fields,
                    the value specifies the <code>size</code> attribute of the corresponding
                    <code>input</code> or <code>textarea</code> element.
                    Not speciying any valid value will make the cartridge ignore it and resort
                    to the default browser value by not rendering any <code>size</code> attribute.
                </documentation>
            </property>
            <property name="defaultInputRowCount" required="false">
                <documentation>
                    If specified denotes the default number of rows of <code>textarea</code> elements.
                    Not specifying any valid value will make the cartridge ignore it and resort
                    to the default browser value by not rendering any <code>size</code> attribute.
                </documentation>
            </property>
            <property name="defaultTableExportTypes">
                <default>xml csv excel pdf</default>
                <documentation>
                    The types of files to which a table can be exported.
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Validation and Security">
            <documentation>
                These properties configure the validation of user input as well as the security.
            </documentation>
            <property name="securityRealm" required="false">
                <documentation>
                    The security realm to use when security is enabled.
                </documentation>
            </property>
            <property name="loginConfigAuthMethod">
                <default>FORM</default>
                <documentation>
                    The auth-method of the login-config section.
                </documentation>
            </property>
            <property name="defaultRole" required="false">
                <documentation>
                    The default role of all secured elements.
                </documentation>
            </property>
            <property name="validationExtension">
                <default>annotations</default>
                <documentation>
                    Indicates whether to use a validation extension, beyond the default JSF.
                    Valid values are:
                    <ul>
                        <li>none</li>
                        <li>annotations</li>
                        <li>commons-validator</li>
                    </ul>
                </documentation>
            </property>
            <property name="clientValidation">
                <default>true</default>
                <documentation>
                    Indicates whether or not validation should occur on the client side.
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Portlet Support">
            <documentation>
                Properties available for portlet support configuration.
            </documentation>
            <property name="portletContainer" required="false">
                <documentation>
                    The type of portlet container being used with this web app. Setting this property changes the application from standalone to a portlet.
                    Valid values are:
                    <ul>
                        <li>liferay</li>
                    </ul>
                </documentation>
            </property>
            <property name="portletClass" required="false">
                <default>org.andromda.presentation.jsf.GenericFaceletsPortlet</default>
                <documentation>
                    The value of the portlet class in the portlet.xml
                </documentation>
            </property>
            <property name="defaultPortletClassName" required="false">
                <default>GenericFaceletsPortlet</default>
                <documentation>
                    The name of the default portlet class to use.
                </documentation>
            </property>
            <property name="ajaxLibrary" required="false">
                <documentation>
                    The AJAX library to use (<a href="http://www.icefaces.org">ICEFaces</a> is the only one supported at this time).
                    Valid values are:
                    <ul>
                        <li>icefaces</li>
                        <li>trinidad</li>
                    </ul>
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Table Paging (DB paging)">
            <documentation>
                These properties provide the ability to configure DB paging support for tables used by the cartridge (this is very.
            </documentation>
            <property name="paginationResultClassName" required="false">
                <documentation>
                    This is the fully qualified name of the class that provides the pagination results supplied from the middle tier; like a service operation.
                    (i.e. if using the Spring cartridge, you'd set this as <em>name.of.your.model.package.PaginationResult</em> where "name.of.your.model.package" is
                    the name of your model's root package).  This must be defined in order for the PageableDataModel class to be generated (which is required
                    for DB backed paging support).
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Other">
            <documentation>
                Other various properties that couldn't be classified into another category.
            </documentation>
            <property name="virtualHost" required="false">
                <documentation>
                    The name to use for the virtual host (if one is required).  For example application.myserver.com.
                </documentation>
            </property>
            <property name="formSerialization">
                <default>true</default>
                <documentation>
                    Whether or not forms should be serialized to disk (and therefore stored for later retrieval
                    for example when the user's session is lost). This just provides simple perisistence for the application
                    state.
                </documentation>
            </property>
            <property name="adfContextAttributeName">
                <default>AndroMDAADFContext</default>
                <documentation>
                    The name of the temporary variable that stores the current ADF faces context (this
                    should typically not be changed).
                </documentation>
            </property>
            <property name="useCaseForwardsClassName">
                <default>UseCaseForwards</default>
                <documentation>
                    The name of the class containing all use case forwards.
                </documentation>
            </property>
            <property name="sessionTimeout">
                <default>45</default>
                <documentation>
                    The number of minutes the session may be idle before timeout occurs.
                </documentation>
            </property>
            <property name="distributable">
                <default>false</default>
                <documentation>
                    Whether or not the web application should be considered <em>distributable</em>;
                    this means that the session will be persisted and restored.
                </documentation>
            </property>
            <property name="stateSavingMethod">
                <default>client</default>
                <documentation>
                    The JSF state saving method to use within the application (can be
                    either <em>client</em> or <em>server</em>).
                </documentation>
            </property>
            <property name="fileTypeName">
                <default>org.apache.myfaces.trinidad.model.UploadedFile</default>
                <documentation>
                    The fully qualified type name to use when file types are modeled for parameters (used for
                    for file uploads).
                </documentation>
            </property>
            <property name="dummyData">
                <default>true</default>
                <documentation>
                    Indicates whether or not dummy data should be rendered (in places like controllers).
                </documentation>
            </property>
            <property name="formPopulatorName">
                <default>FormPopulator</default>
                <documentation>
                    The name to give the form populator utility class. This utility class provides
                    JSF's form population when transferring information from one form to another
                    during application flow.
                </documentation>
            </property>
            <property name="backingListPattern">
                <default>{0}BackingList</default>
                <documentation>
                    The pattern used for constructing a parameter's backing list name.  A backing list
                    is used when you want to select the value of the parameter from a list (typically
                    used for drop-down select input types).
                </documentation>
            </property>
            <property name="backingValuePattern">
                <default>{0}BackingValue</default>
                <documentation>
                    The pattern used for constructing a parameter's backing value name.  A backing value
                    is used with an input table type (when you want to submit values from a table of
                    complex objects).
                </documentation>
            </property>
            <property name="labelListPattern">
                <default>{0}LabelList</default>
                <documentation>
                    The pattern used for constructing the label list name (stores the list
                    of possible parameter value labels).
                </documentation>
            </property>
            <property name="valueListPattern">
                <default>{0}ValueList</default>
                <documentation>
                    The pattern used for constructing the values list name (stores the list of
                    possible parameter values when selecting from a list).
                </documentation>
            </property>
            <property name="converterPattern">
                <default>{0}JsfConverter</default>
                <documentation>
                    The pattern used for constructing converters (like the enumeration converter), where
                    <em>{0}</em> is the name of the model element.
                </documentation>
            </property>
            <property name="viewPopulatorPattern">
                <default>{0}Populator</default>
                <documentation>
                    The pattern used to construct the view form populator filter, where <em>{0}</em>
                    is the name of the view.
                </documentation>
            </property>
            <property name="managedBeansPackage">
                <default>org.andromda.presentation.jsf</default>
                <documentation>
                    Defines the the package in which any extra managed-beans will
                    be generated (such as the layout options class, etc).
                </documentation>
            </property>
            <property name="jsfComponentsPackage">
                <default>org.andromda.presentation.jsf.components</default>
                <documentation>
                    Defines the the package to which any JSF components generated by
                    the cartridge reside.
                </documentation>
            </property>
            <property name="xmlEncoding">
                <default>UTF-8</default>
                <documentation>
                    Encoding for generated XML files.
                </documentation>
            </property>
            <property name="formPattern">
                <default>{0}Form</default>
                <documentation>
                    The pattern to use for constructing the form name, where
                    <em>{0}</em> is the name of the controller operation capitalized.
                </documentation>
            </property>
            <property name="formImplementationPattern">
                <default>{0}FormImpl</default>
                <documentation>
                    The pattern to use for constructing the form implementation name, where
                    <em>{0}</em> is the name of the controller operation capitalized.
                </documentation>
            </property>
            <property name="formMessagesProperty">
                <default>jsfMessages</default>
                <documentation>
                    Defines the name of the property on a form that stores messages.
                </documentation>
            </property>
            <property name="formBeanPattern">
                <default>{0}{1}Form</default>
                <documentation>
                    The pattern for constructing the name of the bean under which the form is stored,
                    where <em>{0}</em> is the name of the use case and <em>{1}</em> is the name of the trigger.
                </documentation>
            </property>
            <property name="controllerImplementationPattern">
                <default>{0}Impl</default>
                <documentation>
                    The pattern for constructing the name of the controller implementation class name (where <em>{0}</em>
                    represents the modeled name of the controller).
                </documentation>
            </property>
            <property name="actionFormKey">
                <default>form</default>
                <documentation>
                    The name of the key under which each action for is stored.  This
                    form is passed along from action to action in order to transfer
                    all parameters.
                </documentation>
            </property>
            <property name="messageResources">
                <default>message-resources</default>
                <documentation>
                    The path of the localized message resources (the <em>.properties</em>
                    suffix is appended to this value when creating the actual file.).
                </documentation>
            </property>
            <property name="jspIncludes">
                <default>includes.jspf</default>
                <documentation>
                    Defines the name of the default includes file (this contains any
                    message resources as well as tag libs.
                </documentation>
            </property>
            <property name="servicePackageNamePattern">
                <default>{0}</default>
                <documentation>
                    The name of the package in which to create the service files, <code>{0}</code>
                    can be used to denote the package in which the service has been modeled.
                </documentation>
            </property>
            <property name="serviceAccessorPattern" required="false">
                <documentation>
                    The pattern to use when calling the backend code for <![CDATA[<<Service>>]]> lookups.
                    For calling services you would use following patterns:
                    <ul>
                        <li><strong>Spring</strong>: <code>${application.package}.ServiceLocator.instance().get{1}()</code></li>
                        <li><strong>EJB</strong>: <code>${myPackage}.{1}Util.getHome().create()</code></li>
                    </ul>
                </documentation>
            </property>
            <property name="exceptionHandlerPattern">
                <default>(.*)(\\{\\s*([\\w|\\.+]*)\\s*\\})(.*)</default>
                <documentation>
                    Used to define the pattern used for retrieving message resource keys
                    from exceptions.  This is useful when exceptions are thrown from the business
                    tier and you want to map these to messages in your presentation.
                    Normally you won't need to change this pattern, however you may want to
                    if you want to enable it to handle exceptions you may have no control over
                    (i.e. SQLExceptions).  Currently the default pattern supports an exception with
                    an embedded <em>{some.resource.key}</em> type key.
                </documentation>
            </property>
            <property name="patternMatchingExceptionHandler">
                <default>PatternMatchingExceptionHandler</default>
                <documentation>
                    The name to give the pattern matching exception handler.
                </documentation>
            </property>
            <property name="useAutocompleteLookup">
                <default>false</default>
                <documentation>
                    Use autocomplete instead of select, to select related entities.
                </documentation>
            </property>
        </propertyGroup>
        <propertyGroup name="Manageable Entities">
            <documentation>
                Properties related to the generation of the web-tier part of the manageable entities
                (also known as the CRUD feature).
            </documentation>
            <property name="crudValueObjectSuffix">
                <default>ValueObject</default>
                <documentation>
                    The suffix to append to the names of generated value objects used in CRUD (manageable entities).
                </documentation>
            </property>
            <property name="crudConfirmationMessages">
                <default>true</default>
                <documentation>
                    Show a confirmation message after each CRUD operation.
                </documentation>
            </property>
        </propertyGroup>
    </properties>
</namespace>
