#set ($generatedFile = "${manageable.searchFormBeanFullPath}.java")
##
##  START TEMPLATE
##
// license-header java merge-point
// Generated by andromda-jsf cartridge (forms\crud\SearchForm.java.vsl) DO NOT EDIT!
package $manageable.manageablePackageName;

/**
 * This form holds the fields that are used in the search operation of ${manageable.name}
 *
 */
public final class $manageable.searchFormBeanClassName
    implements java.io.Serializable
{
#foreach ($field in $manageable.manageableAttributes)
#if ($field.type.collectionType)
#set ($fieldTypeName = "java.util.List")
#else
#if ($field.type.primitive)
#set ($fieldTypeName = $field.type.wrapperName)
#else
#set ($fieldTypeName = $field.type.fullyQualifiedName)
#end
#end
    private $fieldTypeName $field.name;

    /**
$field.getDocumentation("     * ")
     * @return ${field.name}
     */
    public $fieldTypeName #if($field.type.primitive && $field.type.booleanType)get${stringUtils.upperCamelCaseName($field.name)}#else${field.getterName}#end()
    {
#if ($field.complex)
        if (this.$field.name == null)
        {
            this.$field.name = new ${field.type.fullyQualifiedName}();
        }
#end
        return this.${field.name};
    }

    /**
$field.getDocumentation("     * ")
     * @param ${field.name}In
     */
    public void ${field.setterName}($fieldTypeName ${field.name}In)
    {
        this.$field.name = ${field.name}In;
    }

#end
#foreach ($member in $manageable.manageableSearchAssociationEnds)
#if($member.type.manageable)
#set ($fieldType = $member.manageableIdentifier.type)
#set ($fieldTypeName = $fieldType.fullyQualifiedName)
#else
#if($member.type.compositeIdentifier)
#set ($fieldTypeName = "Object")
#else
#set ($fieldType = $member.type.identifiers.iterator().next().type)
#set ($fieldTypeName = $fieldType.fullyQualifiedName)
#end
#end
#if ($member.many)
#set ($fieldTypeName = "${fieldTypeName}[]")
#end
    private $fieldTypeName $member.name;

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $fieldTypeName ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($fieldTypeName ${member.name}In)
    {
## the code below avoids the "0 when null" issue of EL
#if($member.type.compositeIdentifier || $fieldType.primitive || (!$fieldType.integerType && !$fieldType.longType))
        this.$member.name = ${member.name}In;
#else
        //the code below avoids the "0 when null" issue of EL
#if ($member.many)
        this.$member.name = ${managedBeansPackage}.JsfUtils.removeZeros(${member.name}In);
#else
        this.$member.name = (${member.name}In == null || ${member.name}In == 0#if($fieldType.longType)L#end)? null: ${member.name}In;
#end
#end
    }

    private java.util.Collection $member.backingListName;

#set ($backingListMethod = $stringUtils.capitalize($member.backingListName))
    /**
     * The current collection of possible values of ${member.name}.
     * @return ${member.backingListName}
     */
    public java.util.Collection get${backingListMethod}(){
        return ${member.backingListName};
    }

    /**
     * The current collection of possible values of ${member.name}.
     * @return ${member.backingListName}In
     */
    public void set${backingListMethod}(java.util.Collection ${member.backingListName}In){
        this.${member.backingListName} = ${member.backingListName}In;
    }
#end

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${manageable.formSerialVersionUID}L;
}