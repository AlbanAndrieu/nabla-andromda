<?xml version="1.0" encoding="${xmlEncoding}"?>
##<!-- Generated by config/ejb-jar.xml.vsl in andromda-ejb3-cartridge on $umlUtils.date. -->
<!-- Generated by config/ejb-jar.xml.vsl in andromda-ejb3-cartridge. -->
<ejb-jar
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                        http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd"
    version="3.0">

    <description><![CDATA[No Description.]]></description>
    <display-name>Generated by AndroMDA EJB3 Cartridge</display-name>

    <!--
    <enterprise-beans>
    -->

#foreach ($service in $services)
        <!-- session service ${service.serviceName} seam $service.seamComponent -->
#if (!$service.seamComponent)
        <!--
        <session>
            <description>
                <![CDATA[
                $service.getDocumentation("", 64, false)
                ]]>
            </description>
            <ejb-name>${service.serviceName}</ejb-name>
##
## Only define the remote business interface if the bean is NOT a Seam component
##
#**##if ($service.viewTypeRemote)
#**###if ($service.viewTypeRemote && !$service.seamComponent)
            <remote>${service.fullyQualifiedServiceRemoteInterfaceName}</remote>
#**##end
#**##if ($service.viewTypeLocal)
            <local>${service.fullyQualifiedServiceLocalInterfaceName}</local>
#**##end
            <ejb-class>${service.fullyQualifiedServiceName}</ejb-class>
            <session-type>${service.type}</session-type>
#**##if ($service.transactionManagementBean)
            <transaction-type>Bean</transaction-type>
#**##else
            <transaction-type>Container</transaction-type>
#**##end
#**##foreach($envEntry in $service.getEnvironmentEntries(true))
            <env-entry>
                <env-entry-name>${envEntry.name}</env-entry-name>
#if ($envEntry.type.primitive)
#set ($typeName = ${envEntry.type.wrapperName})
#else
#set ($typeName = ${envEntry.type.fullyQualifiedName})
#end
                <env-entry-type>$converter.getJavaLangTypeName($typeName)</env-entry-type>
                <env-entry-value>${envEntry.defaultValue.replace('"','')}</env-entry-value>
            </env-entry>
#**##end
        </session>
        -->

#end
#end
#foreach ($manageable in $manageables)
        <!-- session manageable ${manageable.manageableServiceName} seam $manageable.seamComponent -->
#if (!$manageable.seamComponent)
        <!--
        <session>
            <description>
                <![CDATA[
                $manageable.getDocumentation("", 64, false)
                ]]>
            </description>
            <ejb-name>${manageable.manageableServiceName}</ejb-name>
            <remote>${manageable.fullyQualifiedManageableServiceName}</remote>
            <ejb-class>${manageable.fullyQualifiedManageableServiceBaseName}</ejb-class>
            <session-type>Stateless</session-type>
            <transaction-type>Container</transaction-type>
        </session>
        -->

#end
#end
#foreach ($entity in $entities)
#if ($umlUtils.shouldOutput($entity))
        <!-- session dao ${entity.daoName} seam $entity.seamComponent -->
#if (!$entity.seamComponent)
        <!--
        <session>
            <description>
                <![CDATA[
                $entity.getDocumentation("", 64, false)
                ]]>
            </description>
            <ejb-name>${entity.daoName}</ejb-name>
            <local>${entity.fullyQualifiedDaoName}</local>
            <ejb-class>${entity.fullyQualifiedDaoImplementationName}</ejb-class>
            <session-type>Stateless</session-type>
            <transaction-type>Container</transaction-type>
        </session>
        -->
        
#end
#end
#end
#foreach ($mdb in $mdbs)
        <message-driven>
            <description>
                <![CDATA[
                $mdb.getDocumentation("", 64, false)
                ]]>
            </description>
            <ejb-name>${mdb.messageDrivenName}</ejb-name>
            <ejb-class>${mdb.fullyQualifiedMessageDrivenImplementationName}</ejb-class>
            <messaging-type>javax.jms.MessageListener</messaging-type>
#**##if ($mdb.transactionManagementBean)
            <transaction-type>Bean</transaction-type>
#**##else
            <transaction-type>Container</transaction-type>
#**##end
            <message-destination-type>${mdb.destinationType}</message-destination-type>
#**##if ($mdb.transactionManagementBean || $stringUtils.isNotBlank($mdb.messageSelector) || $mdb.destinationTypeTopic || $mdb.minimumPoolSize > 0 || $mdb.maximumPoolSize > 0)
            <activation-config>
#*  *##if ($mdb.transactionManagementBean)
                <activation-config-property>
                    <activation-config-property-name>acknowledgeMode</activation-config-property-name>
                    <activation-config-property-value>${mdb.acknowledgeMode}</activation-config-property-value>
                </activation-config-property>
#*  *##end
#*  *##if ($stringUtils.isNotBlank($mdb.messageSelector))
                <activation-config-property>
                    <activation-config-property-name>messageSelector</activation-config-property-name>
                    <activation-config-property-value><![CDATA[${mdb.messageSelector}]]></activation-config-property-value>
                </activation-config-property>
#*  *##end
#*  *##if ($mdb.destinationTypeTopic)
                <activation-config-property>
                    <activation-config-property-name>subscriptionDurability</activation-config-property-name>
                    <activation-config-property-value>${mdb.subscriptionDurability}</activation-config-property-value>
                </activation-config-property>
#*  *##end
#*  *##if ($mdb.minimumPoolSize > 0)
                <!-- Not available in JBoss 4.0.5+
                <activation-config-property>
                    <activation-config-property-name>minPoolSize</activation-config-property-name>
                    <activation-config-property-value>${mdb.minimumPoolSize}</activation-config-property-value>
                </activation-config-property>
                -->
#*  *##end
#*  *##if ($mdb.maximumPoolSize > 0)
                <activation-config-property>
                    <activation-config-property-name>maxSession</activation-config-property-name>
                    <activation-config-property-value>${mdb.maximumPoolSize}</activation-config-property-value>
                </activation-config-property>
#*  *##end
            </activation-config>
#**##end
#**##if ($stringUtils.isNotBlank($mdb.runAs))
            <security-identity>
                <run-as>
                    <role-name>${mdb.runAs}</role-name>
                </run-as>
            </security-identity>
#**##end
#**##foreach($envEntry in $mdb.getEnvironmentEntries(true))
            <env-entry>
                <env-entry-name>${envEntry.name}</env-entry-name>
#if ($envEntry.type.primitive)
#set ($typeName = ${envEntry.type.wrapperName})
#else
#set ($typeName = ${envEntry.type.fullyQualifiedName})
#end
                <env-entry-type>$converter.getJavaLangTypeName($typeName)</env-entry-type>
                <env-entry-value>${envEntry.defaultValue.replace('"','')}</env-entry-value>
            </env-entry>
#**##end
        </message-driven>

#end
    <!--
    </enterprise-beans>
    -->
#if (${seamEnabled} == 'true')

    <interceptors>
        <interceptor>
            <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-class>
        </interceptor>
    </interceptors>

#end
    <assembly-descriptor>
#foreach ($interceptor in $interceptors)
##
## Default interceptors
##
#**##if ($interceptor.defaultInterceptor)
#*  *##if (!$defaultInterceptorExists)
        <interceptor-binding>
            <ejb-name>*</ejb-name>
#*    *##set ($defaultInterceptorExists = true)
#*  *##end
            <interceptor-class>${interceptor.fullyQualifiedName}</interceptor-class>
#**##end
#end
#if ($defaultInterceptorExists)
        </interceptor-binding>
#end
#foreach ($service in $services)
##
## Service listener - lifecycle callbacks are defined as an interceptor
##
#**##set ($interceptors = $service.interceptorReferences)
#**##if ($collectionUtils.size($interceptors) >= 1 || $service.listenerEnabled)
        <interceptor-binding>
            <ejb-name>${service.serviceName}</ejb-name>
#*  *##if ($service.listenerEnabled)
            <interceptor-class>${service.fullyQualifiedServiceListenerName}</interceptor-class>
#*  *##end
#*  *##foreach ($interceptor in $interceptors)
            <interceptor-class>${interceptor.fullyQualifiedName}</interceptor-class>
#*  *##end
#*  *##if ($service.excludeDefaultInterceptors)
            <exclude-default-interceptors/>
#*  *##end
        </interceptor-binding>
#**##end
#end
##
## Define method level interceptors for session beans
##
#foreach ($service in $services)
#**##foreach ($operation in $service.businessOperations)
#*  *##set ($interceptors = $operation.interceptorReferences)
#*  *##if ($collectionUtils.size($interceptors) >= 1)
        <interceptor-binding>
            <ejb-name>${service.serviceName}</ejb-name>
#*    *##foreach ($interceptor in $interceptors)
            <interceptor-class>${interceptor.fullyQualifiedName}</interceptor-class>
#*    *##end
            <method>
                <method-name>${operation.name}</method-name>
#*    *##if (!$operation.arguments.empty)
                <method-params>
#*      *##foreach ($argument in $operation.arguments)
                    <method-param>${argument.type.fullyQualifiedName}</method-param>
#*      *##end
                </method-params>
#*    *##end
            </method>
#*    *##if ($operation.excludeClassInterceptors)
            <exclude-class-interceptors/>
#*    *##end
#*    *##if ($operation.excludeDefaultInterceptors)
            <exclude-default-interceptors/>
#*    *##end
        </interceptor-binding>
#*  *##end
#**##end
#end
#foreach ($mdb in $mdbs)
##
## Message-driven bean listener - lifecycle callbacks are defined as an interceptor
##
#**##set ($interceptors = $mdb.interceptorReferences)
#**##if ($collectionUtils.size($interceptors) >= 1 || $mdb.listenerEnabled)
        <interceptor-binding>
            <ejb-name>${mdb.messageDrivenName}</ejb-name>
#*  *##if ($mdb.listenerEnabled)
            <interceptor-class>${mdb.fullyQualifiedMessageDrivenListenerName}</interceptor-class>
#*  *##end
#*  *##foreach ($interceptor in $interceptors)
            <interceptor-class>${interceptor.fullyQualifiedName}</interceptor-class>
#*  *##end
#*  *##if ($mdb.excludeDefaultInterceptors)
            <exclude-default-interceptors/>
#*  *##end
        </interceptor-binding>
#**##end
#end
#if (${seamEnabled} == 'true')
        <interceptor-binding>
            <ejb-name>*</ejb-name>
            <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-class>
        </interceptor-binding>
#end
    </assembly-descriptor>

</ejb-jar>