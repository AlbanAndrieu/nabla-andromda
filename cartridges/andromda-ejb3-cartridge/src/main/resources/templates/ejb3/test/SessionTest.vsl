#parse("templates/ejb3/common/JNDIMacros.vm")
// license-header java merge-point
//
##// Generated by test/SessionTest.vsl in andromda-ejb3-cartridge on $umlUtils.date.
// Generated by test/SessionTest.vsl in andromda-ejb3-cartridge.
//
#if ($stringUtils.isNotBlank($service.testPackageName))
package $service.testPackageName;
#end
#set ($generatedFile = "${stringUtils.replace($service.fullyQualifiedServiceTestName,'.','/')}.java")
#if($stringUtils.isNotBlank($ejb3TypesPackage))
#**##set ($testPackage = "${ejb3TypesPackage}.test.")
#else
#**##set ($testPackage = "")
#end

##import ${testPackage}EJB3Container;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * Service test class ${service.serviceTestName} for testing with Junit
 */
public class $service.serviceTestName
{
    private static final Log logger = LogFactory.getLog(${service.serviceTestName}.class);

#set ($operations = $service.businessOperations)
#if (!$operations.empty)
## TODO: Overloaded operations result in duplicate test method definitions - testSignature does not contain parameters
#foreach ($operation in $operations)
    @org.junit.Test
    public void $operation.testSignature
    {
//        try
//        {
#set ($argServiceName = "$stringUtils.uncapitalize($service.name)")
#if ($service.viewTypeLocal)
#localJndiName($service false)
//            $service.fullyQualifiedServiceLocalInterfaceName $argServiceName = ($service.fullyQualifiedServiceLocalInterfaceName)EJB3Container.getInitialContext(#if ($service.securityEnabled)"user","password"#end).lookup("${jndiName}");
#else
#remoteJndiName($service false)
//            $service.fullyQualifiedServiceRemoteInterfaceName $argServiceName = ($service.fullyQualifiedServiceRemoteInterfaceName)EJB3Container.getInitialContext(#if ($service.securityEnabled)"user","password"#end).lookup("${jndiName}");
#end
//            test implementation
//        }
//        catch (Exception ex)
//        {
//            logger.warn("Failed test $operation.testSignature", ex);
//        }
    }

#end
#end
}
