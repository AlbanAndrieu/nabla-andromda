<?xml version="1.0" encoding="UTF-8"?>
<!--
     Modify as necessary for JPA unit testing. If deleted it will be regenerated.
##     Generated by test/persistence.xml.vsl in andromda-ejb3-cartridge on $umlUtils.date.
     Generated by test/persistence.xml.vsl in andromda-ejb3-cartridge.
-->

#if($hibernateUtils.persistenceVersion2)
<persistence
    xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
    version="2.0">
#else
<persistence
    xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                        http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
    version="1.0">
#end

    <persistence-unit name="UNIT_TEST" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <!-- use jta-data-source only when transaction-type is JTA -->
        <!--<jta-data-source>${test.dataSource}</jta-data-source>-->
        <!-- use non-jta-data-source only when transaction-type is RESOURCE_LOCAL -->
        <non-jta-data-source>${test.dataSource}</non-jta-data-source>
#set ($entityList = $entityUtils.sortEntities($entities, true))
        <!-- Entity list needed for testing in J2SE environment entities=$entities.size()-->
#foreach ($entity in $entityList)
#if ($umlUtils.shouldOutput($entity))
        <class>$entity.fullyQualifiedName</class>
#if ($entity.compositePrimaryKeyPresent)
        <class>$entity.fullyQualifiedEntityCompositePrimaryKeyName</class>
#end
#end
#end
        <properties>
            <property name="hibernate.dialect" value="${testDialect}"/>
            <property name="hibernate.connection.driver_class" value="${testDriver}"/>
            <property name="hibernate.connection.url" value="${testConnectionUrl}"/>
            <property name="hibernate.connection.username" value="${testUsername}"/>
            <property name="hibernate.connection.password" value="${testPassword}"/>
##if ($stringUtils.isNotBlank($hibernateShowSql))
            <property name="hibernate.show_sql" value="${hibernate.showsql}"/>
##end
##if ($stringUtils.isNotBlank($hibernateFormatSql))
            <property name="hibernate.format_sql" value="${hibernate.formatsql}"/>
##end
            <property name="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.test}"/>
            <property name="hibernate.id.new_generator_mappings" value="true"/>
#if ($stringUtils.isNotBlank($hibernateJdbcBatchSize))
            <property name="hibernate.jdbc.batch_size" value="$hibernateJdbcBatchSize"/>
#end

            <!-- Encoding -->
            <property name="hibernate.connection.useUnicode" value="true" />
            <property name="hibernate.connection.characterEncoding" value="UTF-8" />

            <property name="hibernate.transaction.manager_lookup_class" value="${pu.hibernate.transaction.manager_lookup_class.test}"/>
            <property name="hibernate.archive.autodetection" value="class, hbm" />
        </properties>
    </persistence-unit>
</persistence>
