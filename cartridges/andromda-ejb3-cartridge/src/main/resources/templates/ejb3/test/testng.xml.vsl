<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
##<!-- Generated by test/testng.xml.vsl in andromda-ejb3-cartridge on $umlUtils.date. -->
<!-- Generated by test/testng.xml.vsl in andromda-ejb3-cartridge. -->
<suite name="${entityManagerName} Test Suite" verbose="2" parallel="false">
    <!-- Create all entities in the proper dependency referential integrity order -->
    <test name="${entityManagerName} Create Tests" preserve-order="true">
        <!-- Before and after class/test methods are not run if only group is explicitly included -->
        <groups>
            <run>
                <include name="creates"/>
            </run>
        </groups>
        <classes>
#set ($entityList = $entityUtils.sortEntities($entities, true))
#foreach ($entity in $entityList)
#if ($umlUtils.shouldOutput($entity))
            <class name="${entity.fullyQualifiedName}EntityTest"/>
#end
#end
        </classes>
    </test>
    <!-- Retrieve all entities after create and before they are deleted -->
    <test name="${entityManagerName} Retrieve Tests" preserve-order="true">
        <!-- Before and after class/test methods are not run if only group is explicitly included -->
        <groups>
            <run>
                <include name="retrieves"/>
            </run>
        </groups>
        <classes>
#foreach ($entity in $entityList)
#if ($umlUtils.shouldOutput($entity))
            <class name="${entity.fullyQualifiedName}EntityTest"/>
#end
#end
        </classes>
    </test>
## TODO Don't repopulate and sort the list, just iterate in reverse order
    <!-- Run the delete tests from the top down, due to relation constraints -->
    <test name="${entityManagerName} Delete Tests" preserve-order="true">
        <groups>
            <run>
                <include name="deletes"/>
            </run>
        </groups>
        <classes>
#set ($entityReverseList = $entityUtils.sortEntities($entities, false))
#foreach ($entity in $entityReverseList)
#if ($umlUtils.shouldOutput($entity))
            <class name="${entity.fullyQualifiedName}EntityTest"/>
#end
#end
        </classes>
    </test>
#if (!$services.isEmpty() || !$mdbs.isEmpty())
    <!-- Run the Services and MDB tests against the Embeddable EJB3 container -->
    <test name="${entityManagerName} Services Test" preserve-order="true">
        <classes>
#if($stringUtils.isNotBlank($ejb3TypesPackage))
#**##set ($testPackage = "${ejb3TypesPackage}.test.")
#else
#**##set ($testPackage = "")
#end
#if (!$services.isEmpty() || !$mdbs.isEmpty())
            <!-- Always start the EJB3 embeddable container before running the tests -->
            <class name="${testPackage}EJB3Container"/>
#end
#foreach ($service in $services)
            <class name="${service.fullyQualifiedServiceTestName}"/>
#end
#foreach ($mdb in $mdbs)
            <class name="${mdb.fullyQualifiedMessageDrivenTestName}"/>
#end
        </classes>
    </test>
#end
    <!-- Set @Priority on individual test methods, for proper ordering -->
    <listeners>
        <listener class-name="org.andromda.dbtest.PriorityInterceptor"></listener>
    </listeners>
</suite>
