// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
##// Generated by SessionInterface.vsl in andromda-ejb3-cartridge on $umlUtils.date.
// Generated by SessionInterface.vsl in andromda-ejb3-cartridge.
//
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end
#set ($generatedFile = "${stringUtils.replace($service.fullyQualifiedServiceInterfaceName,'.','/')}.java")

/**
 * Parent interface for the ${service.serviceName} session bean which is
 * extended by Local and Remote business interfaces.  Contains constant
 * and attribute accessor method definitions.
 */
public interface ${service.serviceInterfaceName}## no new line
#if($service.generalization)
 extends ${service.generalization.fullyQualifiedServiceInterfaceName}
#end

{
#set ($constants = $service.constants)
#if (!$constants.empty)

    // ----------- Accessors For Constants ------------

#**##foreach($constant in $constants)
## Only expose the method if it is public.
#*  *##if($constant.visibility == "public")
    /**
     * Get the $attribute.name constant
$constant.getDocumentation("     * ")
     */
    public $constant.type.fullyQualifiedName ${constant.getterName}();

#*  *##end
#**##end
#end
#set ($attributes = $service.filterSeamAttributes(${service.instanceAttributes}))
#if (!$attributes.empty)

    // --------------- Attributes ---------------------

#**##foreach ($attribute in $attributes)
## Only expose the method to the component interface if it is public.
#*  *##if ($attribute.visibility == "public")
    /**
     * Get the $attribute.name property
$attribute.getDocumentation("     * ")
     */
    public ${attribute.getterSetterTypeName} ${attribute.getterName}();

#*    *##if(!$attribute.readOnly)
    /**
     * Set the $attribute.name property
     * @param value the new value
     */
    public void ${attribute.setterName}(${attribute.getterSetterTypeName} value);

#*    *##end
#*  *##end
#**##end
#end
#if ($service.stateful)

    // ------------ Lifecycle Methods  -----------------

    public void destroy();
#end
}
