<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>AndroMDA - EJB3 - Transactions</title>
        <author email="vancek@users.sourceforge.net">Vance Karimi</author>
    </properties>
    <body>
        <section name="Transactions">
            <p>
                Defining transactions within or across beans is done via annotations.  This takes the complexity
                out of the deployment descriptor however it's just as easy to define transaction boundaries
                from the descriptor.
            </p>
            <a name="Transaction_Type"/>
            <subsection name="Transaction Type">
                <p>
                    By default, session and message-driven beans will be generated with a
                    <code>@TransactionAttribute</code> annotation with a value of <code>REQUIRED</code>.  To overwrite
                    this value, simply model the <code>andromda_ejb_transaction_type</code> tagged value on
                    the class level or bean method level.
                </p>
                <p>
                    The EJB 3.0 spec defines that the transaction management type cannot be specified for EJB 3.0 
                    entity POJOs.  These entities execute within the transactional context of the caller, which is
                    the DAO or session bean.
                </p>
                <p>
                    The DAO base class also specifies the transaction attribute as <code>REQUIRED</code>.  Remember
                    your business logic resides in the session facade using the DAO API interface; hence you control 
                    your transactions from your session beans.
                </p>
                <p>
                    Your <code>TransactionAttributeType</code> options are:
                </p>
                <ul>
                    <li>Mandatory</li>
                    <li>Never</li>
                    <li>NotSupported</li>
                    <li>Required</li>
                    <li>RequiresNew</li>
                    <li>Supports</li>
                </ul>
            </subsection>
            <a name="Transaction_Demarcation"/>
            <subsection name="Transaction Demarcation">
                <p>
                    The transaction demarcation strategy would normally not be set as the default is <code>CONTAINER</code>
                    managed transaction demarcation.  If you want to specify <code>BEAN</code> managed transaction
                    demarcation, model the <code>andromda_ejb_transaction_management</code> tagged value to
                    <code>BEAN</code>.
                </p>
                <p>
                    If you specify <code>BEAN</code> managed transaction demarcation, the cartridge will inject
                    an instance of <code>UserTransaction</code> into variable name <code>userTrans</code> to
                    manually define your transaction.
                </p>
            </subsection>
        </section>
        <section name="Next">
            <p>
                To learn about manageable entities, click <a href="howto16.html">here</a>.
            </p>
        </section>
    </body>
</document>
