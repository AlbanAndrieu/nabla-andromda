<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>AndroMDA - EJB3 - HowTo Embeddable Objects</title>
        <author email="vancek@users.sourceforge.net">Vance Karimi</author>
    </properties>
    <body>
        <section name="Embeddable Objects">
            <p>
                In some cases you may want to embed plain Java objects or value objects inside your
                entities.  These are called embedded value objects.  Each persistent property of these
                embeddable value objects are mapped to column within the entity's table.
            </p>
            <p>
                The <code>@Embeddable</code> annotation is typically used on the class whose instance is
                an embeddable value object of an entity.  Only a limited number of annotations are
                permitted on the properties of the embeddable value object.  The EJB3 cartridge defines
                the embeddable value object using an ORM metadata mapping file.
            </p>
            <p>
                A persistent property of an entity which is an instance of an embeddable value object
                is marked with the <code>@Embedded</code> annotation.  The <code>@AttributeOverride</code>
                and <code>@AttributeOverrides</code> annotations can override column mappings declared
                in the embedded value object.
            </p>
            <p>
                <img src="images/org/andromda/test/20/a/uml.gif" alt="images/org/andromda/test/20/a/uml.gif"/>
            </p>
            <ul>
                <li class="gen">Auto-generated source that does not need manual editing</li>
                <li class="impl">Auto-generated source that should be edited manually</li>
                <li class="changed">File that is affected by the modifications applied in this section</li>
            </ul>
            <ul>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto20/a/Person.java"><code>Person.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto20/a/PersonDao.java"><code>PersonDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto20/a/PersonDaoBase.java"><code>PersonDaoBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto20/a/PersonDaoImpl.java"><code>PersonDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto20/a/PersonDaoException.java"><code>PersonDaoException.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto20/a/PersonName.java"><code>PersonName.java</code></a></li>
                <li class="impl"><a class="changed" href="howto/org/andromda/test/howto20/a/PersonNameImpl.java"><code>PersonNameImpl.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/META-INF/orm.xml"><code>orm.xml</code></a></li>
            </ul>
            <p>
                You can model basic features on your embeddable class attributes and these will be reflected in the
                generated embeddable value object.  These features are much the same as described in the
                <a href="howto1.html">howto for entities</a>. The following is a brief list of annotations
                and some properties that are available on embeddable attributes.
            </p>
            <ul>
                <li>@Transient</li>
                <li>@Version</li>
                <li>@Lob with @Basic settings to fetch type</li>
                <li>@Column with properties unique, nullable, insertable, updatable, length, columnDefinition, precision and scale</li>
                <li>@Temporal</li>
                <li>@Enumerated</li>
            </ul>
            <a name="Helpful_Hints"/>
            <subsection name="Helpful Hints">
                <p>
                    The EJB3 cartridge now uses the persistence ORM mapping file <b>orm.xml</b> to declare the 
                    embeddable class metadata.  This means that the <code>@Embeddable</code> annotation is no longer
                    rendered in the base or implementation for the embeddable object.  
                    The ORM mapping file defines the embeddable implementation, which extends the abstract embeddable 
                    base object, as the embeddable class.
                </p>
                <p>
                    This has been adopted so that you can have an implementation for embeddable value object operations 
                    or any other aspect requiring manual implementation, without having to be concerned with code 
                    regeneration over-writing your implementation.  This could not be achieved with pure annotations.
                </p>
                <p>
                    The cartridge now support having multiple attributes having the same embeddable value object type
                    within a single entity.  There is limited support for associations between embeddable value objects.
                </p>
            </subsection>
        </section>
        <section name="Next">
            <p>
                For JBoss Seam integration with your EJB 3.0 project, click
                <a href="howto21.html">here</a> to continue.
            </p>
        </section>
    </body>
</document>
