--
--  This script is still highly experimental, it will not work on
--  hibernate-inheritance tables and many-to-many relationships
--  (because a join table must be present - cannot be found in the model)
--
#set ($tableMap = $databaseUtils.resolveOrderedTableMap($tables))

##
##      M A C R O S
##
#macro (columnNames $columns)
#set($comma="")
#foreach ($column in $columns)${comma}${column.columnName}#set($comma=",")#end
#end
##
#macro (keyValues $columns $count)
#set($comma="")
#foreach ($column in $columns)${comma}${column.columnName}=${column.getDummyLoadValue($count)}#set($comma=",")#end
#end
##
#macro (dummyLoadValues $columns $count)
#set($comma="")
#foreach ($column in $columns)${comma}${column.getDummyLoadValue($count)}#set($comma=",")#end
#end
##
##  For each table render the sql statements
##
#foreach ($tableEntry in $tableMap.entrySet())
#set ($table = $tableEntry.key)
#if ($table.enumeration)
#foreach ($literal in $table.literals)
insert into $table.tableName (VALUE,ID) values ('$literal.enumerationValue',$velocityCount);
#end
#else
#set ($columns = $databaseUtils.getOtherColumns($table, $tableEntry.value))
#if ($columns.size() > 0 && $table.dummyLoadSize > 0)
#foreach ($count in [1..$table.dummyLoadSize])
insert into $table.tableName (#columnNames($columns)) values (#dummyLoadValues($columns $count));
#end
#end
#end
#end

##
##  Update remaining foreign keys
##
#foreach ($tableEntry in $tableMap.entrySet())
#set ($table = $tableEntry.key)
#if ($table.enumeration==false && $tableEntry.value)
#set ($columns = $tableEntry.value)
#if ($columns.size() > 0 && $table.dummyLoadSize > 0)
#set ($primKeyColumn = $table.primaryKeyColumn)
#foreach ($count in [1..$table.dummyLoadSize])
#if ($primKeyColumn)
update $table.tableName set #keyValues($columns $count) where $primKeyColumn.columnName=$primKeyColumn.getDummyLoadValue($count);
#else
update $table.tableName set #keyValues($columns $count);
#end
#end
#end
#end
#end
