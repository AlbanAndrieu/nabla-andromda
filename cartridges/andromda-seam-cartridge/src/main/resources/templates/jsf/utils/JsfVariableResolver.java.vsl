// license-header java merge-point
// Generated by andromda-jsf cartridge (utils\JsfVariableResolver.java.vsl) DO NOT EDIT!
#set ($className = "JsfVariableResolver")
#if ($stringUtils.isNotBlank($managedBeansPackage))
package $managedBeansPackage;
#end

import java.util.Map;
import javax.faces.context.FacesContext;
import javax.faces.el.VariableResolver;
import javax.faces.el.EvaluationException;

/**
 *
 */
public class JsfVariableResolver extends VariableResolver
{
    private VariableResolver originalVariableResolver;

    /**
    * Constructor.
    * @param originalVariableResolverIn Original JSF variable resolver.
    */
    public JsfVariableResolver(VariableResolver originalVariableResolverIn) {
       this.originalVariableResolver = originalVariableResolverIn;
    }

    /**
     * @see javax.faces.el.VariableResolver#hash()resolveVariable(javax.faces.context.FacesContext, java.lang.String)
     */
    @Override
    @SuppressWarnings("unchecked")
    public Object resolveVariable(FacesContext context, String name) throws EvaluationException
    {
        Object result = this.originalVariableResolver.resolveVariable(context, name);
        if(result == null)
        {
#if($standalone)
            final Map<String, Object> pageFlowScope = org.apache.myfaces.trinidad.context.RequestContext.getCurrentInstance().getPageFlowScope();
            final Map<String, Object> controllerForms = (Map<String, Object>)pageFlowScope.get(ControllerBase.USE_CASE_FORMS_KEY);
#else
            final $jsfUtils.sessionClassName session = ($jsfUtils.sessionClassName)context.getExternalContext().getSession(true);
            final Map<String, Object> controllerForms = (Map<String, Object>)session.getAttribute(ControllerBase.USE_CASE_FORMS_KEY);
#end

            if(controllerForms != null)
            {
                result = controllerForms.get(name);
            }

            if(result == null)
            {
#if($standalone)
                final Map<String, Object> controllerVariables = (Map<String, Object>)pageFlowScope.get(ControllerBase.USE_CASE_PAGE_VARIABLES_KEY);
#else
                final Map<String, Object> controllerVariables = (Map<String, Object>)session.getAttribute(ControllerBase.USE_CASE_PAGE_VARIABLES_KEY);
#end
                if(controllerVariables != null)
                {
                    result = controllerVariables.get(name);
                }
            }

            if(result != null)
            {
                getRequest(context).setAttribute(name,result);
            }
        }

        return result;
    }

    /**
     * A helper method that gets the current request from the faces
     * context.
     *
     * @param context a faces context
     * @return the current request instance.
     */
    protected $jsfUtils.requestClassName getRequest(FacesContext context)
    {
        return ($jsfUtils.requestClassName)context.getExternalContext().getRequest();
    }
}
