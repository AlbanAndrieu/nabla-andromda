<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.nabla.project.uml.application</groupId>
        <artifactId>application</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>web</artifactId>
    <!--<packaging>seam-war</packaging>-->
    <packaging>war</packaging>
    <name>[${project.parent.artifactId} :: EJB3 Web] - ${project.artifactId} : ${project.version}</name>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
            <scope>provided</scope>
        </dependency>        
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <!--scope>provided</scope-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <!--scope>provided</scope-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <!--scope>provided</scope-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <!--<version>${commons.digester.version}</version>-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss AS 7 -->
        <dependency>
            <artifactId>hibernate-validator</artifactId>
            <groupId>org.hibernate</groupId>
            <scope>provided</scope>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
              </exclusion>
            </exclusions>            
        </dependency>    

	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-search</artifactId>
		<version>${hibernate.search.version}</version>
		<exclusions>
			<exclusion>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
               
        <!-- GWT validation uses Hibernate Validator, and requires the sources 
          at compile time. -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
          <version>${hibernate.validator.version}</version>          
          <scope>provided</scope>
          <classifier>sources</classifier>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
                
        <!-- Import the Bean Validation API, which is used both on the server 
        and the client. -->                
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>
        <!-- GWT validation also requires the validation API sources at compile 
          time -->
        <dependency>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
          <version>${validation.api.version}</version>
          <classifier>sources</classifier>
        </dependency>        
        
        <!--
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-jsf-cartridge-components</artifactId>
            -->
            <!-- 'unknown' because the version doesn't matter for system dependencies>
            <version>${andromda.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/andromda-jsf-cartridge-components.jar</systemPath -->
            <!--
        </dependency>
        -->
        
        <dependency>
            <groupId>com.sun.facelets</groupId>
            <artifactId>jsf-facelets</artifactId>
        </dependency>   
             
        <!-- icefaces 
        <dependency>
            <groupId>org.icefaces</groupId>
            <artifactId>icefaces</artifactId>
        </dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-comps</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-facelets</artifactId>
	</dependency>
	-->
        
    	<!-- richfaces -->
        <dependency>
          <groupId>org.richfaces.framework</groupId>
          <artifactId>richfaces-api</artifactId>
          <scope>provided</scope>
        </dependency>
                	
    	<dependency>
    	  <groupId>org.richfaces.framework</groupId>
    	  <artifactId>richfaces-impl</artifactId>
    	</dependency>
    	
    	<dependency>
    	  <groupId>org.richfaces.ui</groupId>
    	  <artifactId>richfaces-ui</artifactId>
    	</dependency>
	
    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>glassX</artifactId>
    	</dependency>
    	  
    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>darkX</artifactId>
    	</dependency>   
        
        <!-- myfaces -->
        <!--
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
        </dependency>
        -->
        
        <!--

        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.myfaces.tomahawk</groupId>
            <artifactId>tomahawk12</artifactId>
        </dependency>
        -->

        <!-- do not activate validator
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator</groupId>
            <artifactId>myfaces-extval-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-property-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-bean-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
            <artifactId>myfaces-extval-generic-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
            <artifactId>myfaces-extval-trinidad-support</artifactId>
        </dependency>
        -->
        <!-- JBoss7 requires overriding default classloader to support JSF 1.2 -->
        <!-- For MyFaces removed the Sun Jars (jsf-impl and jsf-api) from the war. it will use the MyFaces jars bundled with JBoss.  -->
        <!--
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            -->
            <!--<version>${jsf.api.version}</version>-->
            <!--
            <version>1.2_15</version>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>2.1.2</version>
            <scope>compile</scope>
        </dependency>
        -->
    
	<!-- for cannot access javax.faces.application.FacesMessage -->
	<!-- see core project
	<dependency>
		<groupId>javax.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<version>${jsf.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.faces</groupId>
		<artifactId>jsf-impl</artifactId>
		<version>${jsf.version}</version>
		<scope>provided</scope>
	</dependency>
	-->
		        
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<version>${testng.version}</version>
		<scope>test</scope>
	</dependency>
		        
        <!-- replace this by slf4j-api and slf4j-simple
        http://pwu-developer.blogspot.com/2010/08/caused-by-javalangerror-this-version-of.html
        <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <scope>test</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
           <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>

        <!--
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-utils</artifactId>
        </dependency>
        -->

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>${el.api.version}</version>
			<scope>provided</scope>
		</dependency>	
    		    
        	<dependency>
        	  <groupId>javax.ejb</groupId>
        	  <artifactId>ejb-api</artifactId>
        	  <scope>provided</scope>
		  <optional>true</optional> 
        	</dependency>
        	
        <!-- *************** Seam Dependencies *************** -->
    <!--
	<dependency>
	  <groupId>org.jboss.seam</groupId>
	  <artifactId>jboss-seam</artifactId>
	  <version>${seam.version}</version>
	  <type>ejb</type>
	</dependency>    
    -->
        
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ui</artifactId>
        </dependency>
        
        <!-- optional, but a reasonable requirement for a newly created project -->
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-debug</artifactId>
        </dependency>
   
	<dependency>
		<groupId>org.jboss.seam</groupId>
		<artifactId>jboss-seam-remoting</artifactId>
		<version>${seam.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	                
        <!-- add more Seam modules as needed 
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ioc</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-mail</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-pdf</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-remoting</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-excel</artifactId>
        </dependency>        
        -->

	<dependency>
		<groupId>javassist</groupId>
		<artifactId>javassist</artifactId>
		<version>${javassist.version}</version>
		<scope>provided</scope>
	</dependency>
		
        <dependency>
        	<groupId>asm</groupId>
        	<artifactId>asm</artifactId>
        	<version>${asm.version}</version>
        </dependency>		
       <dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib</artifactId>
		<version>${cglib.version}</version>
	</dependency>		
		
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </dependency>
        
        <!--
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
        </dependency>
        -->
        
        <!--dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency-->
        
        <!--
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        -->
        
        <!--
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-script-wrappers</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-j2ee</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3-client</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3x</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>hibernate-entitymanager</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId> 
            <artifactId>hibernate-core</artifactId>
        </dependency>              

	<!-- *************** Drools / jBPM Dependency *************** -->

	<dependency>
		<groupId>org.drools</groupId>
		<artifactId>drools-core</artifactId>
		<version>${drools.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.drools</groupId>
		<artifactId>drools-compiler</artifactId>
		<version>${drools.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.mvel</groupId>
		<artifactId>mvel2</artifactId>
		<version>${org.mvel.mvel2.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.jbpm</groupId>
		<artifactId>jbpm-jpdl</artifactId>
		<version>${jbpm.jpdl.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>

        <!-- gwt-user is required at runtime because we use some of the client/server 
        shared APIs such as RegExp, so scope is 'compile' rather than 'provided'. -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <!--<scope>compile</scope> error in deployment -->
            <scope>provided</scope> <!-- prevents from including this in war -->
        </dependency>
        <!--
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope> --><!-- prevents from including this in war --><!--
        </dependency>

        <dependency>
             <groupId>com.google.gwt</groupId>
             <artifactId>gwt-servlet</artifactId>
             <version>${gwt.version}</version>
            <scope>compile</scope>
        </dependency>
        -->
	<dependency>
		<groupId>xerces</groupId>
		<artifactId>xercesImpl</artifactId>
		<version>${xerces.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
 
	<dependency>
		<groupId>org.jboss.el</groupId>
		<artifactId>jboss-el</artifactId>
		<version>${jboss.el.version}</version>
		<scope>provided</scope>
	</dependency>
	 
       <dependency>
               <groupId>org.hibernate.javax.persistence</groupId>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
               <version>${hibernate.jpa.api.version}</version>
               <scope>provided</scope>
       </dependency>	
         
        <dependency>
            <groupId>nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.6.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- For JSF2.0 -->
        <!--
        <dependency>
            <groupId>com.ocpsoft</groupId>
            <artifactId>ocpsoft-pretty-faces</artifactId>
            <version>2.0.2_GA</version>
        </dependency>
        -->
        
        <!--
        <dependency>
            <groupId>org.ajax4jsf</groupId>
            <artifactId>ajax4jsf</artifactId>
            <version>1.0.5</version>
        </dependency>    
        -->    
        
        <!--
	<dependency>
	    <groupId>javax.persistence</groupId>
	    <artifactId>persistence-api</artifactId>
	    <scope>provided</scope>
	    <optional>true</optional>
	</dependency>        
	-->	
                                		
    </dependencies>
    
    <properties>    
    	<target.dir>target</target.dir>
    </properties>
	    
    <build>
        <finalName>${project.parent.artifactId}</finalName>
        <!--<defaultGoal>hotdeploy:exploded</defaultGoal>-->
        <!-- comment resources for mvn eclipse:eclipse -->
            <!--        
        <resources>
            <resource>
              <directory>src/main/java</directory>
              <includes>
                <include>**/client/**/*.java</include>
                <include>**/client/**/*.properties</include>
                <include>**/shared/**/*.java</include>
                <include>**/shared/**/*.properties</include>
                <include>**/*.gwt.xml</include>
              </includes>
            </resource>
            -->
            <!--
            <resource>
                <directory>src/hot/java</directory>
                <filtering>false</filtering>
            </resource> 
            -->                 
            <!--
            <resource>
            	<directory>${maven.build.generated}/main/java</directory>
            	<filtering>true</filtering>
            </resource>	
            -->	        
            <!--
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>true</filtering>
            </resource>
	    <resource>
                <directory>${maven.build.generated}/main/webapp</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>${project.basedir}/${target.dir}/src/main/webapp</targetPath>
                <filtering>false</filtering>
            </resource>
        </resources>
                  -->           
        <!--
	<filters>
		<filter>${home.dir}/filters/${project.parent.artifactId}-${environment}.properties</filter>
	</filters>   
	-->     	
	<!--
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
            <includes>
              <include>**/client/**/*.java</include>
              <include>**/client/**/*.properties</include>
              <include>**/shared/**/*.java</include>
              <include>**/shared/**/*.properties</include>
              <include>**/*.gwt.xml</include>
            </includes>
          </testResource>
        </testResources>
        -->	
        <plugins>
           <plugin>
           	<groupId>org.codehaus.mojo</groupId>
           	<artifactId>build-helper-maven-plugin</artifactId>
           	<executions>
           		<execution>
           			<id>add-source</id>
           			<phase>validate</phase>
           			<goals>
           				<goal>add-source</goal>
           			</goals>
           			<configuration>
           				<sources>
           					<source>${basedir}/src/hot/java</source>
           				</sources>
           			</configuration>
           		</execution>
           	</executions>
           </plugin>

           <!-- dirty hack for GWT issue #3439 - it is not really fixed -->
           <!--
           <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>remove-javax</id>
                  <phase>compile</phase>
                  <configuration>
                    <tasks>
                      <delete dir="${project.build.directory}/classes/javax" />
                    </tasks>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            -->
            <!-- GWT plugin to compile client-side java code to javascript and 
            to run GWT development mode -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>gwt-maven-plugin</artifactId>
              <version>${maven.gwt.plugin.version}</version>
              <configuration>
                <inplace>true</inplace>
                <logLevel>INFO</logLevel>
                <extraJvmArgs>-Xmx512m</extraJvmArgs>
                <!-- Configure GWT's development mode (formerly known as hosted 
                  mode) to not start the default server (embedded jetty), but to download the 
                  HTML host page from the configured runTarget. -->
                <noServer>true</noServer>
                <runTarget>http://localhost:8180/timetracker-ejb3/HelloWorldGWT.html</runTarget>
             
              </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>resources</goal>
                    <goal>compile</goal>
                  </goals>
                </execution>
                <execution>
                  <id>gwt-clean</id>
                  <phase>clean</phase>
                  <goals>
                    <goal>clean</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
<!--        
	    <plugin>
	    	<groupId>com.ctp.seam.maven</groupId>
	    	<artifactId>maven-hotdeploy-plugin</artifactId>
	    	<extensions>true</extensions>
	    	<configuration>
	    		<source>${jdkLevel}</source>
	    		<target>${jdkLevel}</target>
	    		<sourceDirectory>${basedir}/src/main/hot</sourceDirectory>
	    		<deployDirectory>${jboss.deploy.directory}/${build.finalName}.war</deployDirectory>
	    	</configuration>
	    </plugin>   
	    -->    
	    <!-- run with 'mvn cli:execute-phase' and use 'hot' -->
	    <plugin>
	    	<groupId>org.twdata.maven</groupId>
	    	<artifactId>maven-cli-plugin</artifactId>
	    	<configuration>
	    		<userAliases>
	    			<hot>hotdeploy:exploded -o</hot>
	    			<cln>clean -o -Pclean</cln>
	    		</userAliases>
	    	</configuration>
	    </plugin>	    
	    <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- the default value is the filter list under build -->
          	    <!-- specifying a filter will override the filter list under build -->
          	    <filters>
          	      <filter>${home.dir}/filters/${project.parent.artifactId}-${environment}.properties</filter>
          	    </filters>
          	    <webResources>
          	      <webResource>
          	        <directory>${basedir}/src/main/webapp/WEB-INF</directory>
          	        <targetPath>WEB-INF</targetPath>
          	        <filtering>true</filtering>
          	      </webResource>
          	    </webResources>                
                    <!--<warSourceDirectory>${target.dir}/src/main/webapp</warSourceDirectory>-->
                    <!-- Needed for mvn 2.1 with war-plugin 2.1. See http://jira.codehaus.org/browse/MWAR-187 -->
                    <!--
                    <useCache>false</useCache>
                    <excludes>**/*.java</excludes>
                    -->
                    <!--packagingExcludes>**/aopa*.jar,**/cglib-*.jar,**/commons-codec*.jar,**/commons-fileu*.jar,**/commons-logging*.jar,**/hibernate-validator*.jar,**/spring-a*.jar,**/spring-bean*.jar,**/spring-co*.jar,**/spring-expr*.jar,**/spring-tx*.jar,**/spring-web*.jar</packagingExcludes-->
                    <!-- We must exclude GWT client local classes from the deployment, 
                      or classpath scanners such as Hibernate and Weld get confused when the webapp 
                      is bootstrapping. -->
                    <!-- workaround for openejb exluded ejb-jar.xml and components.xml from **/WEB-INF/classes/META-INF/ -->
                    <!--<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class,**/WEB-INF/classes/META-INF/*.xml</packagingExcludes>-->     
                    <packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>    
                    <!--<webappDirectory>${jboss.deploy.directory}/${project.parent.artifactId}</webappDirectory>-->
                    <archive>
                      <manifestEntries>
                        <Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies>
                      </manifestEntries>
                    </archive>  
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <!--<artifactId>jetty-maven-plugin</artifactId>-->
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.14</version>
                <configuration>
			<scanIntervalSeconds>10</scanIntervalSeconds>
          		<connectors>
          		  <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
          		    <port>8050</port>
          		    <maxIdleTime>60000</maxIdleTime>
          		  </connector>
          		</connectors>                
          		<!--
                    <webAppSourceDirectory>${project.basedir}/${target.dir}/src/main/java</webAppSourceDirectory>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <baseResource implementation="org.mortbay.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp, ${project.basedir}/${target.dir}/src/main/webapp</resourcesAsCSV>
                        </baseResource>
                        <contextPath>/${application.id}-${project.version}</contextPath>
                    </webAppConfig>
                    -->
                </configuration>
                <!-- jsp 2
		<dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.0</artifactId>
                        <version>6.1.14</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler-jdt</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-runtime</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                        <version>6.1.14</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jsp-api-2.1</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>start</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jetty-annotations</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
		</dependencies>                
		-->
            </plugin>
        </plugins>
    </build>
    
    <profiles>
                <!-- important in order to openejb to work components.xml and ejb-jar.xml (can be empty) must be in src\main\resources\META-INF if source are in src/main/java -->
                <!-- in order to seam to see the name add seam.properties to src\main\resources -->
		<profile>		        
			<id>microcontainer-openejb</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<dependencies>

    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-ejb</artifactId>
    				  <version>${seam.utils.version}</version>    				  
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>
    
    				<dependency>
    				  <groupId>no.knowit.seam</groupId>
    				  <artifactId>seam-utils-openejb</artifactId>
    				  <version>${seam.utils.version}</version>
    				  <type>ejb</type>
    				  <scope>test</scope>
    				</dependency>              
                	
        			<dependency>
				  <groupId>org.jboss</groupId>
				  <artifactId>jboss-common-core</artifactId>
				  <version>2.2.19.GA</version>
				  <scope>test</scope>
				</dependency>		            			
			</dependencies>
			<build>        
				<resources>				
					<resource>
						<directory>${maven.build.generated}/main/resources</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>${basedir}/src/main/resources</directory>
						<filtering>true</filtering>
					</resource>																		
				</resources>
				
				<testResources>
					<testResource>
						<directory>${basedir}/src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>		
					<testResource>
						<directory>${basedir}/src/test/bootstrap-openejb</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				<filters>
					<filter>${home.dir}/filters/project-${environment}.properties</filter>
				</filters>	   	
			</build>				
		</profile>	
		<!--
		<profile>
			<id>clean</id>
			<build>
				<defaultGoal>clean</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven.clean.plugin.version}</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${jboss.deploy.directory}/${build.finalName}.war/</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>package-war</id>
			<build>
				<defaultGoal>clean</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.ctp.seam.maven</groupId>
						<artifactId>maven-hotdeploy-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<source>${jdkLevel}</source>
							<target>${jdkLevel}</target>
							<sourceDirectory>${basedir}/src/hot/java</sourceDirectory>
							<useWarPackaging>true</useWarPackaging>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		-->	
	</profiles>    
</project>
